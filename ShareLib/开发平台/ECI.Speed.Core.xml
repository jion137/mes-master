<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ECI.Speed.Core</name>
    </assembly>
    <members>
        <member name="T:PL.Base.DALAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.DALAttribute.#ctor(PL.Base.SupportType)">
            <summary>
            
            </summary>
            <param name="supportType"></param>
        </member>
        <member name="T:PL.Base.SupportType">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.SupportType.Oracle">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.SupportType.SqlServer">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.SupportType.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.BaseSO">
            <summary>
            服务对象基类
            </summary>
        </member>
        <member name="F:PL.Base.BaseSO.cmn">
            <summary>
            cmn SQL处理帮助
            </summary>
        </member>
        <member name="F:PL.Base.BaseSO.ServiceId">
            <summary>
            服务ID
            </summary>
        </member>
        <member name="M:PL.Base.BaseSO.Execute(PL.Base.EciContext)">
            <summary>
            执行服务
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.CommonSO.Execute(PL.Base.EciContext)">
            <summary>
            执行服务
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.CommonSO.Delete(PL.Base.CommonBLL,PL.Base.EciContext,System.Collections.Generic.List{System.String})">
            <summary>
            删除
            </summary>
            <param name="bll"></param>
            <param name="context"></param>
            <param name="listKey"></param>
        </member>
        <member name="M:PL.Base.CommonSO.Load(PL.Base.CommonBLL,PL.Base.EciContext,System.String)">
            <summary>
            加载
            </summary>
            <param name="bll"></param>
            <param name="context"></param>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.CommonSO.Save(PL.Base.CommonBLL,PL.Base.EciContext,PL.Base.EntityBase,System.Boolean)">
            <summary>
            保存
            </summary>
            <param name="bll"></param>
            <param name="context"></param>
            <param name="saveEntity"></param>
            <param name="isAdd"></param>
        </member>
        <member name="M:PL.Base.CommonSO.Search(PL.Base.CommonBLL,PL.Base.EciContext,PL.Base.Paging,PL.Base.EntityBase)">
            <summary>
            查询
            </summary>
            <param name="bll"></param>
            <param name="context"></param>
            <param name="pageInfo"></param>
            <param name="queryEntity"></param>
        </member>
        <member name="M:PL.Base.CommonSO.GetBLLInstance(PL.Base.EciContext)">
            <summary>
            获取处理逻辑组件
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SOFactory.CreateServiceInstance(System.String,System.String)">
            <summary>
            创建服务对象
            </summary>
            <param name="assemblyName"></param>
            <param name="fullClassName"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.BaseVAL">
            <summary>
            验证层基类
            </summary>
        </member>
        <member name="F:PL.Base.BaseVAL.cmn">
            <summary>
            SQL辅助
            </summary>
        </member>
        <member name="T:PL.Base.SuperBLL">
            <summary>
            逻辑组件
            </summary>
        </member>
        <member name="F:PL.Base.SuperBLL.cmn">
            <summary>
            SQL处理
            </summary>
        </member>
        <member name="T:PL.Base.CommonBLL">
            <summary>
            通用逻辑组件
            </summary>
        </member>
        <member name="F:PL.Base.CommonBLL.cmn">
            <summary>
            SQL处理
            </summary>
        </member>
        <member name="M:PL.Base.CommonBLL.Delete(PL.Base.BLLContext,System.Collections.Generic.List{System.String})">
            <summary>
            删除
            </summary>
            <param name="context">上下文</param>
            <param name="listKey">删除的数据主键</param>
        </member>
        <member name="M:PL.Base.CommonBLL.Load(PL.Base.BLLContext,System.String)">
            <summary>
            加载
            </summary>
            <param name="context">上下文</param>
            <param name="key">主键</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:PL.Base.CommonBLL.Save(PL.Base.BLLContext,PL.Base.EntityBase,System.Boolean)">
            <summary>
            保存
            </summary>
            <param name="context">上下文</param>
            <param name="saveEntity">保存对象</param>
            <param name="isAdd">是否新增</param>
            <returns>返回实体</returns>
        </member>
        <member name="M:PL.Base.CommonBLL.Search(PL.Base.BLLContext,PL.Base.Paging,PL.Base.EntityBase)">
            <summary>
            查询
            </summary>
            <param name="context">上下文</param>
            <param name="paging">分页对象</param>
            <param name="queryEntity">查询条件</param>
            <returns>查询对象</returns>
        </member>
        <member name="T:PL.Base.BaseBLL">
            <summary>
            逻辑对象基类
            </summary>
        </member>
        <member name="F:PL.Base.BaseBLL.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="F:PL.Base.BaseBLL.cmn">
            <summary>
            cmn SQL处理帮助
            </summary>
        </member>
        <member name="P:PL.Base.BaseBLL.ts">
            <summary>
            事务对象
            </summary>
        </member>
        <member name="M:PL.Base.BaseBLL.Commit">
            <summary>
            事务提交-[尝试]
            </summary>
        </member>
        <member name="M:PL.Base.BaseBLL.Rollback">
            <summary>
            事务回滚-[尝试]
            </summary>
        </member>
        <member name="M:PL.Base.BaseBLL.CreateEciTransaction">
            <summary>
            创建事务
            </summary>
        </member>
        <member name="M:PL.Base.BaseBLL.CreateEciTransaction(System.Object)">
            <summary>
            创建事务
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:PL.Base.BaseBLL.SetUserInfo(PL.Base.UserInfo)">
            <summary>
            设置用户信息
            </summary>
            <param name="userInfo"></param>
        </member>
        <member name="T:PL.Base.BaseDAL">
            <summary>
            数据访问层基类
            </summary>
        </member>
        <member name="F:PL.Base.BaseDAL.cmn">
            <summary>
            SQL辅助
            </summary>
        </member>
        <member name="T:PL.Base.Cache.HdCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Cache.HdCache.Get(System.String)">
            <summary>
            写入缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Cache.HdCache.Set(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Cache.HdCache.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:PL.Base.Cache.EciRedisDB">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.Cache.EciRedis">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.Cache.EciRedis.Client">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Cache.EciRedis.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Cache.EciRedis.Init">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Cache.EciRedis.Get(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Cache.EciRedis.Get``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Cache.EciRedis.Set(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Cache.EciRedis.Set``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Cache.EciRedis.SetThread``1(System.String,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:PL.Base.Common.Base64Convert">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Common.Base64Convert.FileToBase64(System.String)">
            <summary>
            文件转换成Base64字符串
            </summary>
            <param name="fileName">文件绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Common.Base64Convert.Base64ToFileAndSave(System.String,System.String)">
            <summary>
            Base64字符串转换成文件
            </summary>
            <param name="strInput">base64字符串</param>
            <param name="fileName">保存文件的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Common.Base64Convert.Base64ToByte(System.String)">
            <summary>
            Base64字符串转换成文件
            </summary>
            <param name="strInput">base64字符串</param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Common.JsonHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Common.JsonHelper.GetJsonContent(System.Object)">
            <summary>
            获取对象的Json内容
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Common.JsonHelper.GetObjectFromJson``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Common.MyWatch">
            <summary>
            监控
            </summary>
        </member>
        <member name="M:PL.Base.Common.MyWatch.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Common.MyWatch.Start">
            <summary>
            启动
            </summary>
        </member>
        <member name="M:PL.Base.Common.MyWatch.Restart">
            <summary>
            重启
            </summary>
        </member>
        <member name="M:PL.Base.Common.MyWatch.AddWatch(System.String)">
            <summary>
            增加监控点
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:PL.Base.Common.MyWatch.AddEnd">
            <summary>
            结束
            </summary>
        </member>
        <member name="M:PL.Base.Common.MyWatch.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Common.MyWatch.Display">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:PL.Base.Common.EciStopWatch.AddWatchPoint(System.String)">
            <summary>
            增加监控点
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:PL.Base.CommonLib">
            <summary>
            公共类库
            </summary>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQL(System.String)">
            <summary>
            包含查询内容，前后模糊查询
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQL(System.Int32)">
            <summary>
            包含查询内容，前后模糊查询
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQL(System.Single)">
            <summary>
            包含查询内容，前后模糊查询
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQL(System.Double)">
            <summary>
            包含查询内容，前后模糊查询
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQL(System.DateTime)">
            <summary>
            包含查询内容，前后模糊查询
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQE(System.String)">
            <summary>
            以查询内容结束
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQE(System.Int32)">
            <summary>
            以查询内容结束
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQE(System.Single)">
            <summary>
            以查询内容结束
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQE(System.Double)">
            <summary>
            以查询内容结束
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQS(System.String)">
            <summary>
            以查询内容开始
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQS(System.Int32)">
            <summary>
            以查询内容开始
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQS(System.Single)">
            <summary>
            以查询内容开始
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQS(System.Double)">
            <summary>
            以查询内容开始
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CommonLib.SQLQS(System.DateTime)">
            <summary>
            以查询内容开始
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DBType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:PL.Base.DBType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:PL.Base.DBType.Oracle">
            <summary>
            ORACLE
            </summary>
        </member>
        <member name="F:PL.Base.DBType.SqlServer">
            <summary>
            SqlServer
            </summary>
        </member>
        <member name="F:PL.Base.DBType.MySql">
            <summary>
            MySql
            </summary>
        </member>
        <member name="F:PL.Base.DBType.OLE">
            <summary>
            OLE
            </summary>
        </member>
        <member name="F:PL.Base.DBType.ODBC">
            <summary>
            ODBC
            </summary>
        </member>
        <member name="F:PL.Base.DBType.OracleManage">
            <summary>
            ORACLE-Manage
            </summary>
        </member>
        <member name="T:PL.Base.DownloadHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.DownloadHelper.DownloadFile(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.DownloadHelper.DownloadXmlFile(System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.DownloadHelper.DownloadRemotePDF(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="fileName"></param>
        </member>
        <member name="T:PL.Base.EciHttpWebRequest">
            <summary>
            页面请求辅助类
            </summary>
        </member>
        <member name="P:PL.Base.EciHttpWebRequest.Url">
            <summary>
            访问地址
            </summary>
        </member>
        <member name="P:PL.Base.EciHttpWebRequest.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:PL.Base.EciHttpWebRequest.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:PL.Base.EciHttpWebRequest.Timeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="P:PL.Base.EciHttpWebRequest.Request">
            <summary>
            请求
            </summary>
        </member>
        <member name="M:PL.Base.EciHttpWebRequest.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.EciHttpWebRequest.Prepare">
            <summary>
            准备
            </summary>
        </member>
        <member name="M:PL.Base.EciHttpWebRequest.Get">
            <summary>
            Get
            </summary>
        </member>
        <member name="M:PL.Base.EciHttpWebRequest.WebResponseGet(System.Net.HttpWebRequest)">
            <summary> 
            Process the web response. 
            </summary> 
            <param name="webRequest">The request object.</param> 
            <returns>The response data.</returns> 
        </member>
        <member name="T:PL.Base.EmptyOperation">
            <summary>
            空操作
            </summary>
        </member>
        <member name="M:PL.Base.EmptyOperation.Ignore(System.Exception)">
            <summary>
            空操作
            </summary>
        </member>
        <member name="T:PL.Base.ExceptionHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.ExceptionHelper.GetExceptionMessage(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.StringHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.StringHelper.ToCN(System.String)">
            <summary>
            繁体转简体
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.StringHelper.ToTW(System.String)">
            <summary>
            简体转繁体
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.StreamHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.StreamHelper.StreamToBytes(System.IO.Stream)">
            <summary> 
            将 Stream 转成 byte[] 
            </summary> 
        </member>
        <member name="M:PL.Base.StreamHelper.BytesToStream(System.Byte[])">
            <summary> 
            将 byte[] 转成 Stream 
            </summary> 
        </member>
        <member name="M:PL.Base.StreamHelper.StreamToBase64(System.IO.Stream)">
            <summary> 
            将 Stream 转成 byte[] 
            </summary> 
        </member>
        <member name="T:PL.Base.ZipTool">
            <summary>   
            适用与ZIP压缩   
            </summary>   
        </member>
        <member name="M:PL.Base.ZipTool.ZipDirectory(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String)">
            <summary>   
            递归压缩文件夹的内部方法   
            </summary>   
            <param name="folderToZip">要压缩的文件夹路径</param>   
            <param name="zipStream">压缩输出流</param>   
            <param name="parentFolderName">此文件夹的上级文件夹</param>   
            <returns></returns>   
        </member>
        <member name="M:PL.Base.ZipTool.ZipDirectory(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.Boolean)">
            <summary>
            私有方法，增加是否包含父文件夹方法
            </summary>
            <param name="folderToZip">要压缩的文件夹路径</param>
            <param name="zipStream">压缩输出流</param>
            <param name="ContainParent">是否包含父文件夹</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ZipTool.ZipDirectory(System.String,System.String,System.Boolean)">
            <summary>
            生成Zip
            </summary>
            <param name="folderToZip"></param>
            <param name="zipedFile"></param>
            <param name="IncludeParent">是否包含父文件夹</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ZipTool.ZipDirectory(System.String,System.String,System.String)">
            <summary>   
            压缩文件夹    
            </summary>   
            <param name="folderToZip">要压缩的文件夹路径</param>   
            <param name="zipedFile">压缩文件完整路径</param>   
            <param name="password">密码</param>   
            <returns>是否压缩成功</returns>   
        </member>
        <member name="M:PL.Base.ZipTool.ZipDirectory(System.String,System.String)">
            <summary>   
            压缩文件夹   
            </summary>   
            <param name="folderToZip">要压缩的文件夹路径</param>   
            <param name="zipedFile">压缩文件完整路径</param>   
            <returns>是否压缩成功</returns>   
        </member>
        <member name="M:PL.Base.ZipTool.ZipFile(System.String,System.String,System.String)">
            <summary>   
            压缩文件   
            </summary>   
            <param name="fileToZip">要压缩的文件全名</param>   
            <param name="zipedFile">压缩后的文件名</param>   
            <param name="password">密码</param>   
            <returns>压缩结果</returns>   
        </member>
        <member name="M:PL.Base.ZipTool.ZipFile(System.String,System.String)">
            <summary>   
            压缩文件   
            </summary>   
            <param name="fileToZip">要压缩的文件全名</param>   
            <param name="zipedFile">压缩后的文件名</param>   
            <returns>压缩结果</returns>   
        </member>
        <member name="M:PL.Base.ZipTool.Zip(System.String,System.String,System.String)">
            <summary>   
            压缩文件或文件夹   
            </summary>   
            <param name="fileToZip">要压缩的路径</param>   
            <param name="zipedFile">压缩后的文件名</param>   
            <param name="password">密码</param>   
            <returns>压缩结果</returns>   
        </member>
        <member name="M:PL.Base.ZipTool.Zip(System.String,System.String)">
            <summary>   
            压缩文件或文件夹   
            </summary>   
            <param name="fileToZip">要压缩的路径</param>   
            <param name="zipedFile">压缩后的文件名</param>   
            <returns>压缩结果</returns>   
        </member>
        <member name="M:PL.Base.ZipTool.UnZip(System.String,System.String,System.String)">
            <summary>   
            解压功能(解压压缩文件到指定目录)   
            </summary>   
            <param name="fileToUnZip">待解压的文件</param>   
            <param name="zipedFolder">指定解压目标目录</param>   
            <param name="password">密码</param>   
            <returns>解压结果</returns>   
        </member>
        <member name="M:PL.Base.ZipTool.UnZip(System.String,System.String)">
            <summary>   
            解压功能(解压压缩文件到指定目录)   
            </summary>   
            <param name="fileToUnZip">待解压的文件</param>   
            <param name="zipedFolder">指定解压目标目录</param>   
            <returns>解压结果</returns>   
        </member>
        <member name="T:PL.Base.BizLogDetail">
            <summary>
            业务系统日志
            </summary>
        </member>
        <member name="P:PL.Base.BizLogDetail.BizType">
            <summary>
            业务类型
            </summary>
        </member>
        <member name="P:PL.Base.BizLogDetail.BizNo">
            <summary>
            业务编号
            </summary>
        </member>
        <member name="P:PL.Base.BizLogDetail.SubNo">
            <summary>
            子业务编号
            </summary>
        </member>
        <member name="P:PL.Base.BizLogDetail.SubId">
            <summary>
            子业务唯一编号
            </summary>
        </member>
        <member name="P:PL.Base.BizLogDetail.OperName">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="P:PL.Base.BizLogDetail.DataDetail">
            <summary>
            操作数据详细
            </summary>
        </member>
        <member name="P:PL.Base.BizLogDetail.Memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:PL.Base.BizLog">
            <summary>
            业务系统日志
            </summary>
        </member>
        <member name="F:PL.Base.BizLog.context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="M:PL.Base.BizLog.#ctor(PL.Base.BLLContext)">
            <summary>
            构造函数
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:PL.Base.BizLog.DBTag">
            <summary>
            数据库标志
            </summary>
        </member>
        <member name="P:PL.Base.BizLog.BizType">
            <summary>
            业务类型
            </summary>
        </member>
        <member name="P:PL.Base.BizLog.BizNo">
            <summary>
            业务编号
            </summary>
        </member>
        <member name="P:PL.Base.BizLog.SubNo">
            <summary>
            子业务编号
            </summary>
        </member>
        <member name="P:PL.Base.BizLog.SubId">
            <summary>
            子业务唯一编号
            </summary>
        </member>
        <member name="P:PL.Base.BizLog.OperName">
            <summary>
            操作名称
            </summary>
        </member>
        <member name="P:PL.Base.BizLog.DataDetail">
            <summary>
            操作数据详细
            </summary>
        </member>
        <member name="P:PL.Base.BizLog.Memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="F:PL.Base.BizLog.Items">
            <summary>
            日志明细
            </summary>
        </member>
        <member name="M:PL.Base.BizLog.AddChildren(PL.Base.BizLogDetail)">
            <summary>
            增加明细
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:PL.Base.BizLog.Begin">
            <summary>
            开始
            </summary>
        </member>
        <member name="M:PL.Base.BizLog.WriteLog">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.BizLog.WriteLog(System.Object)">
            <summary>
            日志写入数据库
            </summary>
        </member>
        <member name="T:PL.Base.Core.Entity.EntityValidate.EntityValidateMetaData">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Core.Entity.EntityValidate.EntityValidateMetaData.ListColumn">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Core.Entity.EntityValidate.EntityValidateMetaData.GetColumn(System.String)">
            <summary>
            获取列
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Core.Entity.EntityValidate.EntityValidateMetaData.AddColumn(PL.Server.Entity.ColumnInfo)">
            <summary>
            增加列信息
            </summary>
            <param name="columnInfo"></param>
        </member>
        <member name="T:PL.Base.Core.Entity.EntityValidate.EntityValidateMetaDataProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Core.Entity.EntityValidate.EntityValidateMetaDataProvider.Get(System.String)">
            <summary>
            
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Core.Entity.EntityValidate.EntityValidateMetaDataProvider.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="T:PL.Base.Core.Entity.EntityValidate.EntityValidator">
            <summary>
            实体验证
            </summary>
        </member>
        <member name="M:PL.Base.Core.Entity.EntityValidate.EntityValidator.Validate(PL.Base.EntityBase)">
            <summary>
            实体验证
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:PL.Base.Core.Helper.CommonSQLBuilder.CommonSQLBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.NumberHelper">
            <summary>
            数字转换辅助类
            </summary>
        </member>
        <member name="M:PL.Base.NumberHelper.NumToChr(System.Char)">
            <summary>
            将字符型变量转化为大写汉语数字
            </summary>
            <param name="ch">字符 '0'~'9'</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NumberHelper.RMBToChr(System.Double)">
            <summary>
            把数字转换为大写数字
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NumberHelper.Demo">
            <summary>
            演示
            </summary>
        </member>
        <member name="M:PL.Base.NumberHelper.ToThousand(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.PDFHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.PDFHelper.ExcelToPDF(System.String)">
            <summary>
            
            </summary>
            <param name="sourcePath"></param>
        </member>
        <member name="T:PL.Base.QRCodeHelper">
            <summary>
            二维码
            </summary>
        </member>
        <member name="F:PL.Base.QRCodeHelper.FileName">
            <summary>
            保存的文件名
            </summary>
        </member>
        <member name="M:PL.Base.QRCodeHelper.Create(System.String)">
            <summary>
            创建二维码
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.QRCodeHelper.CreateBASE64(System.String)">
            <summary>
            创建二维码
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:PL.Base.DataCacheContainer">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.DataCacheContainer.LoadFromFile(System.String)">
            <summary>
            向二级缓存【文件】索要数据源，如果没有则从数据库中查询
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataCacheContainer.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.DataCacheManager">
            <summary>
            数据缓存管理
            </summary>
        </member>
        <member name="M:PL.Base.DataCacheManager.GetNameFromCache(System.Data.DataTable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="field"></param>
            <param name="type"></param>
        </member>
        <member name="M:PL.Base.DataCacheManager.GetNameFromCache(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="field"></param>
            <param name="type"></param>
            <param name="asName"></param>
        </member>
        <member name="M:PL.Base.DataCacheManager.GetCodeNameFromCache(System.Data.DataTable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="field"></param>
            <param name="type"></param>
        </member>
        <member name="M:PL.Base.DataCacheManager.GetCodeNameFromCache(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="field"></param>
            <param name="type"></param>
            <param name="asName"></param>
        </member>
        <member name="M:PL.Base.DataCacheManager.GetDataFromCache(System.Data.DataTable,System.String,System.String,System.Boolean,System.String)">
            <summary>
            从缓存中获取名称
            </summary>
            <param name="data"></param>
            <param name="field"></param>
            <param name="type"></param>
            <param name="includeCode"></param>
            <param name="asName"></param>
        </member>
        <member name="M:PL.Base.DataCacheManager.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.DBConn">
            <summary>
            数据库链接信息
            </summary>
        </member>
        <member name="F:PL.Base.DBConn.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="F:PL.Base.DBConn.ConnectionType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="T:PL.Base.DBDriver">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="F:PL.Base.DBDriver.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="F:PL.Base.DBDriver.ConnectionType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="M:PL.Base.DBDriver.GetConn(System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBDriver.GetConn(System.String,System.String)">
            <summary>
            获取数据库
            </summary>
        </member>
        <member name="M:PL.Base.DBDriver.InitByConfig">
            <summary>
            根据 Config 初始化
            </summary>
        </member>
        <member name="M:PL.Base.DBDriver.GetDBType(System.String)">
            <summary>
            获取数据库类型
            </summary>
            <param name="connType"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DBParamType">
            <summary>
            参数类型
            </summary>
        </member>
        <member name="F:PL.Base.DBParamType.VarChar">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:PL.Base.DBParamType.DateTime">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:PL.Base.DBParamType.CLOB">
            <summary>
            CLOB
            </summary>
        </member>
        <member name="T:PL.Base.DBExecuteOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.DBExecuteOption.CommandTimeout">
            <summary>
             执行超时时间
            </summary>
        </member>
        <member name="T:PL.Base.DBTool.PageSQLInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.DBTool.PageSQLInfo.QuerySql">
            <summary>
            查询语句
            </summary>
        </member>
        <member name="F:PL.Base.DBTool.PageSQLInfo.CountSql">
            <summary>
            查询总记录数语句
            </summary>
        </member>
        <member name="F:PL.Base.DBTool.PageSQLInfo.DirectCount">
            <summary>
            直接执行Count(1),而不是嵌套
            </summary>
        </member>
        <member name="F:PL.Base.DBTool.PageSQLInfo.HasChange">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.DBTool.PageSQLManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.DBTool.PageSQLManager.Get(System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Domain.Bean.EciParamBean">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.Domain.Bean.EciParamBean.ParamValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.Domain.Bean.EciParamBean.Status">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.DBUtility">
            <summary>
            多数据库辅助类
            </summary>
        </member>
        <member name="P:PL.Base.DBUtility.Instance">
            <summary>
            数据库对象
            </summary>
        </member>
        <member name="M:PL.Base.DBUtility.OracleDBMode">
            <summary>
            设置数据库模式Oracle（主要是用于对象查询出来后，生成目标对象）
            </summary>
        </member>
        <member name="M:PL.Base.DBUtility.SqlServerDBMode">
            <summary>
            设置数据库模式SqlServer（主要是用于对象查询出来后，生成目标对象）
            </summary>
        </member>
        <member name="M:PL.Base.DBUtility.ResetDBMode">
            <summary>
            重置成系统的数据库链接模式
            </summary>
        </member>
        <member name="T:PL.Base.IDBUtility">
            <summary>
            多数据库接口
            </summary>
        </member>
        <member name="M:PL.Base.IDBUtility.SQLQ(System.DateTime)">
            <summary>
            日期处理
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IDBUtility.TO_CHAR(System.String)">
            <summary>
            TO_CHAR函数封装
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IDBUtility.TO_CHAR(System.String,System.String)">
            <summary>
            TO_CHAR函数封装
            </summary>
            <param name="key"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IDBUtility.DATE_TO_CHAR(System.String)">
            <summary>
            日期转成字符串封装
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IDBUtility.DATE_TO_CHAR(System.String,System.String)">
            <summary>
            日期转成字符串封装
            </summary>
            <param name="key"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="P:PL.Base.IDBUtility.CONCATENATE">
            <summary>
            连接
            </summary>
        </member>
        <member name="P:PL.Base.IDBUtility.IFNULL">
            <summary>
            Oracle=NVL MsSQL=IsNull MySQL=IFNull
            </summary>
        </member>
        <member name="P:PL.Base.IDBUtility.DBO">
            <summary>
            Oracle=空 MsSQL=dbo. MySQL=空
            </summary>
        </member>
        <member name="M:PL.Base.IDBUtility.NUMBER_TO_CHAR(System.String)">
            <summary>
            数字转字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:PL.Base.IDBUtility.F_NAME">
            <summary>
            F_NAME封装
            </summary>
        </member>
        <member name="P:PL.Base.IDBUtility.DUAL">
            <summary>
            空表
            </summary>
        </member>
        <member name="P:PL.Base.IDBUtility.SYSDATE">
            <summary>
            系统日期
            </summary>
        </member>
        <member name="P:PL.Base.IDBUtility.SYS_GUID">
            <summary>
            系统唯一ID
            </summary>
        </member>
        <member name="P:PL.Base.IDBUtility.SUBSTR">
            <summary>
            截取字符串
            </summary>
        </member>
        <member name="F:PL.Base.DictionaryData.KeepKeyUpper">
            <summary>
            Key转成大写
            </summary>
        </member>
        <member name="P:PL.Base.DictionaryData.Item(System.String)">
            <summary>
            获取指定Key对应的值，如果没有则返回空，不是Null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DictionaryData.Clone">
            <summary>
            深度拷贝
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciConfig.Read(System.String)">
            <summary>
            读取配置文件值，如果没有配置节点则返回Null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciConfig.ReadNullToEmpty(System.String)">
            <summary>
            读取配置文件值，如果没有配置节点则返回空
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciConfig.Read(System.String,System.String)">
            <summary>
            读取配置文件值，如果没有配置节点则返回默认值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.YearInfo">
            <summary>
            年信息
            </summary>
        </member>
        <member name="F:PL.Base.YearInfo.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:PL.Base.YearInfo.WeekCount">
            <summary>
            总周数
            </summary>
        </member>
        <member name="M:PL.Base.YearInfo.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="year">年</param>
        </member>
        <member name="T:PL.Base.WeekInfo">
            <summary>
            星期类
            </summary>
        </member>
        <member name="F:PL.Base.WeekInfo.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="F:PL.Base.WeekInfo.Week">
            <summary>
            周
            </summary>
        </member>
        <member name="F:PL.Base.WeekInfo.StartDate">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="F:PL.Base.WeekInfo.EndDate">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="M:PL.Base.WeekInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="year">年</param>
            <param name="week">周</param>
        </member>
        <member name="F:PL.Base.ECIDataCacheReader.Cache">
            <summary>
            配置的缓存
            </summary>
        </member>
        <member name="M:PL.Base.ECIDataCacheReader.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="P:PL.Base.ServerSession.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="T:PL.Base.FileManage.FileServer">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.FileManage.FileServer.Upload(PL.Base.FileManage.FileEntity)">
            <summary>
            
            </summary>
            <param name="file"></param>
        </member>
        <member name="T:PL.Base.FileManage.FileClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.FileManage.FileClient.Upload(PL.Base.FileManage.FileEntity)">
            <summary>
            
            </summary>
            <param name="file"></param>
        </member>
        <member name="T:PL.Base.FileManage.FileEntity">
            <summary>
            文件对象
            </summary>
        </member>
        <member name="P:PL.Base.FileManage.FileEntity.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.EciSysWebLog">
            <summary>
            系统访问日志
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.AjaxAction">
            <summary>
            异步请求类型
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.PageTitle">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.Url">
            <summary>
            页面地址
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.ReferUrl">
            <summary>
            调用地址
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.FunctionName">
             <summary>
            功能
             </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.EventTarget">
            <summary>
            控件
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.EventArgument">
            <summary>
            参数
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.LOGIN_NO">
            <summary>
            登录账号
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.USER_NAME">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.USER_COMPANY">
            <summary>
            公司
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.Ip">
            <summary>
            IP地址
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.OS">
            <summary>
            操作系统
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.BROWSER">
            <summary>
            浏览器
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.USER_AGENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.IS_MOBILE">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.IsWin">
            <summary>
            WinForm应用程序
            </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.IsMonitor">
             <summary>
            监控页面
             </summary>
        </member>
        <member name="F:PL.Base.EciSysWebLog.MonitorName">
            <summary>
            监控名称
            </summary>
        </member>
        <member name="M:PL.Base.EciSysWebLog.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.EciSysWebLog.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="isWin"></param>
        </member>
        <member name="M:PL.Base.EciSysWebLog.GetSysLog">
             <summary>
            获取LOG对象
             </summary>
        </member>
        <member name="T:PL.Base.LogManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.LogManager.SOALog(PL.Base.EciContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.LogManager.SOALog(PL.Base.EciContext,System.Exception)">
            <summary>
            日志提交
            </summary>
            <param name="context"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.LogManager.LogSubmit(PL.Base.EciSysWebLog)">
            <summary>
            日志提交
            </summary>
            <param name="eciLog"></param>
        </member>
        <member name="M:PL.Base.LogManager.LogSubmit(PL.Base.EciSysWebLog,PL.Base.LogType)">
            <summary>
            日志提交
            </summary>
            <param name="eciLog"></param>
            <param name="logType"></param>
        </member>
        <member name="M:PL.Base.LogManager.WriteLog(PL.Base.EciSysWebLog)">
             <summary>
            存储到本地
             </summary>
             <param name="log"></param>
        </member>
        <member name="M:PL.Base.LogManager.WriteLog(PL.Base.EciContext,PL.Base.EciSysSOALog)">
             <summary>
            SOA日志存储到本地
             </summary>
             <param name="context"></param>
             <param name="log"></param>
        </member>
        <member name="T:PL.Base.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:PL.Base.LogType.Event">
            <summary>
            操作
            </summary>
        </member>
        <member name="F:PL.Base.LogType.Access">
            <summary>
            访问
            </summary>
        </member>
        <member name="F:PL.Base.LogType.SOA">
            <summary>
            服务
            </summary>
        </member>
        <member name="F:PL.Base.LogType.Ajax">
            <summary>
            异步
            </summary>
        </member>
        <member name="F:PL.Base.LogType.TimeOut">
            <summary>
            超时
            </summary>
        </member>
        <member name="T:PL.Base.SqlLog">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.SqlLog.Write(System.String)">
            <summary>
            高风险SQL日志
            </summary>
            <param name="sql"></param>
        </member>
        <member name="T:PL.Base.MonitorUrl">
            <summary>
            工具
            </summary>
        </member>
        <member name="F:PL.Base.MonitorUrl.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:PL.Base.MonitorUrl.Url">
            <summary>
            地址
            </summary>
        </member>
        <member name="F:PL.Base.MonitorUrl.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:PL.Base.MonitorUrlManager">
            <summary>
            监控页面配置
            </summary>
        </member>
        <member name="F:PL.Base.MonitorUrlManager.ListInfo">
            <summary>
            包含文件
            </summary>
        </member>
        <member name="M:PL.Base.MonitorUrlManager.GetMonitorUrl(System.String)">
            <summary>
            是否在监控清单中
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.MonitorUrlManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="T:PL.Base.SysMsgProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.SysMsgProvider.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.SysMsgProvider.Get(System.String)">
            <summary>
            获取
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.SysMsg">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.SysMsg.ThrowAppException(System.String)">
            <summary>
            抛出异常
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:PL.Base.SysMsg.ThrowAppException(System.String,System.String)">
            <summary>
            抛出异常
            </summary>
            <param name="code"></param>
            <param name="arg0"></param>
        </member>
        <member name="M:PL.Base.SysMsg.ThrowAppException(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
        </member>
        <member name="M:PL.Base.SysMsg.ThrowAppException(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="M:PL.Base.SysMsg.Get(System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SysMsg.Get(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="arg0"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SysMsg.Get(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SysMsg.Get(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciServer">
            <summary>
            用户级服务器数据
            </summary>
            <summary>
            应用信息
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prAppName">
            <summary>
            应用程序名称
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prLoginInfo">
            <summary>
            登录信息
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prLoginInfoBottom">
            <summary>
            页面底部登录信息
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prHideLogo">
            <summary>
            是否隐藏LOGO
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prFunctionId">
            <summary>
            功能ID 
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prAppId">
            <summary>
            应用ID
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prAppCode">
            <summary>
            应用编码
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prRoleId">
            <summary>
            用户角色ID
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prIop">
            <summary>
            被整合
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prToken">
            <summary>
            被整合
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prMenuName">
            <summary>
            功能菜单：名称，如果没有设置就是系统功能
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prNodeId">
            <summary>
            组织机构ID
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prNodeCode">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prAppRootId">
            <summary>
            应用程序根目录
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prLogo">
            <summary>
            Logo
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prLoginLogo">
            <summary>
            Logo
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prPrivilegeMode">
            <summary>
            用户权限模式
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prAddRootFunction">
            <summary>
            用户权限模式
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prToolId">
            <summary>
            工具栏ID -[更多功能，对应权限平台]
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prFlowImage">
            <summary>
            流程图
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prLanguage">
            <summary>
            语言
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prHomeUrl">
            <summary>
            首页
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prStartUrl">
            <summary>
            登录成功后跳转的页面 一般用来进行用户级变量的设置
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prButtonEnabledForever">
            <summary>
            按钮永远生效
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prSystemApp">
            <summary>
            系统App
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prEntryUrl">
            <summary>
            入口地址
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prEntryName">
            <summary>
            入口地址
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.prEciAppToken">
             <summary>
            应用之间整合prEciAppToken
             </summary>
        </member>
        <member name="F:PL.Base.EciServer.prPTFLAG">
             <summary>
            平台类型prPTFLAG
             </summary>
        </member>
        <member name="F:PL.Base.EciServer.serverPath">
            <summary>
            服务路径
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.CompressResponse">
            <summary>
            是否压缩报文
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ServerPath">
            <summary>
            引用程序根目录
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.DataBaseEncoding">
            <summary>
            当前数据库编码格式
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ConnectionStringIncludeType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ConnectionString">
            <summary>
            数据库连接
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ConnectionType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.CommandTimeout">
            <summary>
            命令执行超时时间
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.IsWeb">
            <summary>
            是否是WEB应用
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.LogPath">
            <summary>
            日志路径
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.LogSubmit">
            <summary>
            是否提报日志
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.LogSubmitUrl">
            <summary>
            日志提报到统一日志平台地址
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ProductClass">
            <summary>
            产品分类
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ProductCode">
            <summary>
            产品代码
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ProductSite">
            <summary>
            产品部署点
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.DevLog">
            <summary>
            开发LOG输出，为了便于问题追踪
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.SsoLog">
            <summary>
            SSO LOG输出，为了便于问题追踪
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.LogUser">
            <summary>
            SSO LOG  DEV_LOG 只记录指定人的日志
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.PemLog">
            <summary>
            性能监控日志
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AssemblyLoadRuntime">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AutoSaveInputCode">
            <summary>
            自动保存录入企业
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AutoException">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AppName">
            <summary>
            应用名称
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.EciDataHelpReadType">
            <summary>
            数据源读取类型
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.EciTableReadType">
            <summary>
            数据字典读取类型
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AccessLogLevel">
            <summary>
            访问日志级别:0不记录, 1全部记录,2只记录异常
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.EventLogLevel">
            <summary>
            事件日志级别:0不记录, 1全部记录,2只记录异常
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.SOALogLevel">
            <summary>
            服务日志级别:0不记录, 1全部记录,2只记录异常
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AppRootUrl">
            <summary>
            网站根目录
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AppPort">
            <summary>
            网站根目录
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AppSiteName">
            <summary>
            网站站点名称
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailSmtpServer">
            <summary>
            邮件服务器地址
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailUser">
            <summary>
            邮件账号
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailPassword">
            <summary>
            邮件密码
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailPort">
            <summary>
            邮件端口
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailFromName">
            <summary>
            发送人名称
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.LoginUrl">
            <summary>
            登录页地址：Session失效跳转目标页面
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MoblieLoginUrl">
            <summary>
            移动登录页地址：Session失效跳转目标页面
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.LogRequestContent">
            <summary>
            是否记录用户请求内容
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailException">
            <summary>
            发生异常是否发送邮件通知
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailExceptionTo">
            <summary>
            发生异常邮件通知对象
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MailExceptionName">
            <summary>
            发生异常发件人名
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ShowFeedback">
            <summary>
            启用反馈
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ShowHelp">
            <summary>
            启用帮助
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.IsDev">
            <summary>
            开发模式
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.LogicEnabled">
            <summary>
            功能按钮逻辑控制
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.ButtonEnabledForever">
            <summary>
            功能按钮永远生效 （为了配合测试）
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.ToolId">
            <summary>
            工具栏ID -[更多功能，对应权限平台]
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.FlowImage">
            <summary>
            流程图
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.InstanceId">
            <summary>
            实例ID
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.InstanceCodePrefix">
            <summary>
            部署实例编码前缀
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.InstanceName">
            <summary>
            实例名称
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MainMode">
            <summary>
            框架页面模式
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.MainTabMode">
            <summary>
            1,2,3
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.UIMode">
            <summary>
            界面模式 Big:大气型  Small:紧凑型
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.LogicInSameProject">
            <summary>
            逻辑控制
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.CheckLogin">
            <summary>
            检查用户不能同时登录(单点登录)
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.JavascriptLog">
            <summary>
            脚本性能调试
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.CheckDataField">
            <summary>
            检查DataField是否重复
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.CheckRefresh">
            <summary>
            检查页面重复提交
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.EnableChooseEdit">
            <summary>
            允许放大镜编辑
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.LogCatch">
            <summary>
            抓取日志
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.FocusSelectText">
            <summary>
            获取焦点时自动选择中文本框
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.CheckPasswordStrength">
            <summary>
            检查密码强度
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.CheckIdentity">
            <summary>
            检查会话身份变化，防止Session级别串数据
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.RedisStatus">
            <summary>
            是否启用Redis
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.TestMode">
            <summary>
            测试模式
            </summary>
        </member>
        <member name="F:PL.Base.EciServer.SelectCompany">
            <summary>
            选择公司
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.PageSize">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.StartUrl">
            <summary>
            登录成功后跳转的页面 一般用来进行用户级变量的设置
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ConfigInDB">
            <summary>
            Config放置在DB中
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.MenuExpand">
            <summary>
            菜单展开
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.VirtualPath">
            <summary>
            虚拟目录 例如 ""或者  "/SALE"
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.LoginHistory">
            <summary>
            记录登录日志
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.IsClient">
            <summary>
            客户端
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.BizLog">
            <summary>
            记录业务日志
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AppSize">
            <summary>
            App图标尺寸
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.SSOVersion">
            <summary>
            权限平台版本
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.EChooseBox">
            <summary>
            放大镜,在容器内
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ETextBoxAutoTrim">
            <summary>
            文本框Trim
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AuthenticationMode">
            <summary>
            认证模式
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ActiveDomain">
            <summary>
            域
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.MyFavoriteDisplayMode">
            <summary>
            我的收藏显示模式
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.AppFolder">
            <summary>
            App图标文件夹
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.LoginGetDeptInfo">
            <summary>
            登录的时候初始化部门信息
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.SSOFilterPlatform">
            <summary>
            登录用户支持只查询指定运行公司的角色权限
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.SSOFilterPlatformList">
            <summary>
            登录用户支持只查询指定运行公司的角色权限（白名单，即使SSOFilterPlatform没有开启，也启用）
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.SSOLoginHistory">
            <summary>
            记录权限平台登录日志
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ServerIp">
            <summary>
            服务器IP地址
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.EciNoEx">
            <summary>
            调用F_ECI_GET_NO_EX
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.EnableDataToken">
            <summary>
            数据令牌
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.DesignGrid">
            <summary>
            在线设计列表控件
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.NewUserMustChangePassword">
            <summary>
            新用户必须修改密码
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.ResetPasswordDays">
            <summary>
            重置密码天数
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.MaxWrongPasswordTimes">
            <summary>
            用户登录密码输错最大次数（为0不限制，零点后重置）
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.EnableComAttr">
            <summary>
            是否启用企业个性配置（需要表ECI_COM_ATTR）
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.TimeOutKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.SQLTW2CN">
            <summary>
            繁体转简体
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.IsOracle">
            <summary>
            Oracle数据库
            </summary>
        </member>
        <member name="P:PL.Base.EciServer.IsSqlServer">
            <summary>
            SqlServer数据库
            </summary>
        </member>
        <member name="M:PL.Base.EciServer.UserServer">
            <summary>
            用户状态信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciServer.InitFramework">
            <summary>
            初始化框架
            </summary>
        </member>
        <member name="T:PL.Base.BizLang">
            <summary>
            系统语言包
            </summary>
        </member>
        <member name="M:PL.Base.BizLang.GetReplace(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BizLang.GetReplace(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BizLang.Get(System.String)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.BizLang.Get(System.String,System.String)">
            <summary>
            获取语言包
            </summary>
            <param name="item"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.FrameworkLang">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.FrameworkLang.Get(System.String)">
            <summary>
            获取语言包
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FrameworkLang.Get(System.String,System.String)">
            <summary>
            获取语言包
            </summary>
            <param name="item"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FrameworkLang.GetReplace(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FrameworkLang.GetReplace(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.FrameworkLang.GetReplace(System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EventLogHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.EventLogHelper.Info(System.String)">
            <summary>
            写入事件日志
            </summary>
        </member>
        <member name="M:PL.Base.EventLogHelper.Error(System.String)">
            <summary>
            写入事件日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.EventLogHelper.Error(System.Exception)">
            <summary>
            写入事件日志
            </summary>
        </member>
        <member name="T:PL.Base.SysLangManager">
            <summary>
            系统语言包
            </summary>
        </member>
        <member name="M:PL.Base.SysLangManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.SysLangManager.Get(System.String,System.String)">
            <summary>
            获取
            </summary>
            <param name="lang"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SysLangManager.Get(System.String,System.String,System.String)">
            <summary>
            获取
            </summary>
            <param name="lang"></param>
            <param name="item"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.LangList">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.LangList.UI_GRIDVIEW_PAGE_INFO">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.LangList.UI_GRIDVIEW_PAGE_INFO_NOPAING">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.LangList.UI_GRIDVIEW_PAGE_INFO_GO_TO">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.LangList.UI_GRIDVIEW_PAGE_INFO_PAGE_CHAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.LangList.UI_DYNAMICUI_QUERY">
            <summary>
            查询(Q)
            </summary>
        </member>
        <member name="F:PL.Base.LangList.UI_DYNAMICUI_RESET">
            <summary>
            重置(R)
            </summary>
        </member>
        <member name="F:PL.Base.LangList.UI_DYNAMICUI_ALL">
            <summary>
            全部
            </summary>
        </member>
        <member name="T:PL.Base.LangManager">
            <summary>
            系统语言包
            </summary>
        </member>
        <member name="P:PL.Base.LangManager.UserLanguage">
            <summary>
            用户语言
            </summary>
        </member>
        <member name="M:PL.Base.LangManager.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.LangManager.Get(System.String,PL.Base.LangList)">
            <summary>
            获取语言包
            </summary>
            <param name="lang"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LangManager.Get(System.String,System.String)">
            <summary>
            获取语言包
            </summary>
            <param name="lang"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LangManager.Get(System.String,PL.Base.LangList,System.String)">
            <summary>
            获取语言包
            </summary>
            <param name="lang"></param>
            <param name="item"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LangManager.Get(System.String,System.String,System.String)">
            <summary>
            获取语言包
            </summary>
            <param name="lang"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.LogCache.InfoCatch.BaseCatchInfo">
            <summary>
            基础抓取信息
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.BaseCatchInfo.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:PL.Base.LogCache.InfoCatch.PageStepCatchInfo">
            <summary>
            页面信息抓取信息
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.PageStepCatchInfo.StepName">
            <summary>
            执行阶段 【页面Load Event】
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.PageStepCatchInfo.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.PageStepCatchInfo.SOAInfoList">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.LogCache.InfoCatch.PageInfoCatchInfo">
            <summary>
            页面信息抓取信息
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.PageInfoCatchInfo.Name">
            <summary>
            页面名称
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.PageInfoCatchInfo.URL">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.PageInfoCatchInfo.PageStepList">
            <summary>
            请求信息列表
            </summary>
        </member>
        <member name="T:PL.Base.LogCache.InfoCatch.SOAInfoCatchInfo">
            <summary>
            SOA信息抓取信息
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.SOAInfoCatchInfo.ServiceID">
            <summary>
            SOA编号
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.SOAInfoCatchInfo.SQLInfoList">
            <summary>
            SQL信息列表
            </summary>
        </member>
        <member name="T:PL.Base.LogCache.InfoCatch.SQLInfoCatchInfo">
            <summary>
            SQL信息抓取信息
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.SQLInfoCatchInfo.IsError">
            <summary>
            判断是否是查询分页数量
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.SQLInfoCatchInfo.Name">
            <summary>
            SQL信息名称
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.SQLInfoCatchInfo.SQL">
            <summary>
            原始SQL语句
            </summary>
        </member>
        <member name="P:PL.Base.LogCache.InfoCatch.SQLInfoCatchInfo.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="T:PL.Base.LogCatchManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.LogCatchManager.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:PL.Base.LogCatchManager.Log(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PL.Base.LogCatchManager.LogSql(System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:PL.Base.LogCatchManager.LogErrorSql(System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:PL.Base.LogCatchManager.Log(PL.Base.LogInfo)">
            <summary>
            
            </summary>
            <param name="logInfo"></param>
        </member>
        <member name="M:PL.Base.LogCatchManager.LogCompleted(System.String)">
            <summary>
            
            </summary>
            <param name="accessId"></param>
        </member>
        <member name="M:PL.Base.LogCatchManager.GetFromCache(System.String)">
            <summary>
            
            </summary>
            <param name="accessId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LogCatchManager.Get(System.String)">
            <summary>
            
            </summary>
            <param name="accessId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LogCatchManager.GetAll">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.LogCatchManager.QueryLog(System.String)">
            <summary>
            查询日志
            </summary>
            <param name="accessId"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.LogCatchAccessInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogCatchAccessInfo.AccessId">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogCatchAccessInfo.AccessDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogCatchAccessInfo.ListLogInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.LogCatchAccessInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.CacheLogType">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.CacheLogType.LOG">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.CacheLogType.SQL">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.LogInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.AccessId">
            <summary>
            页面访问ID
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.PageStep">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.StepName">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.ServiceId">
            <summary>
            SOA请求
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.Name">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.SQL">
            <summary>
            执行语句
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.LogDate">
            <summary>
            记录时间
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.LogInfo.IsError">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.LogInfo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.LogAccepter">
            <summary>
            日志接收
            </summary>
        </member>
        <member name="M:PL.Base.LogAccepter.Accept(System.String)">
            <summary>
            日志入库
            </summary>
            <param name="content"></param>
        </member>
        <member name="T:PL.Base.LogSubmiter">
            <summary>
            日志提报
            </summary>
        </member>
        <member name="M:PL.Base.LogSubmiter.#ctor(PL.Server.Core.Entity.ECI_SYS_LOG)">
            <summary>
            日志提报-构造函数
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:PL.Base.LogSubmiter.SubmitAsync(PL.Server.Core.Entity.ECI_SYS_LOG)">
            <summary>
            日志提报
            </summary>
            <param name="logInfo"></param>
        </member>
        <member name="T:PL.Base.BLLContext">
            <summary>
            逻辑上下文
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.Log">
            <summary>
            系统日志
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.BizLog">
            <summary>
            业务系统日志
            </summary>
        </member>
        <member name="M:PL.Base.BLLContext.#ctor">
            <summary>
            逻辑上下文
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.NeedSummary">
            <summary>
            需要汇总
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.Confirmed">
            <summary>
            已经确认
            </summary>
        </member>
        <member name="P:PL.Base.BLLContext.IsFirstRequest">
            <summary>
            第一次请求
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.ThreadTaskId">
            <summary>
            异步任务ID
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.CreateExportTask">
            <summary>
            创建导出任务
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.IsExport">
            <summary>
            当前查询是导出
            </summary>
        </member>
        <member name="P:PL.Base.BLLContext.OperId">
            <summary>
            操作ID
            </summary>
        </member>
        <member name="P:PL.Base.BLLContext.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.Message">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:PL.Base.BLLContext.OperTime">
            <summary>
            操作时间
            </summary>
        </member>
        <member name="F:PL.Base.BLLContext.UserInfo">
            <summary>
            用户身份信息
            </summary>
        </member>
        <member name="P:PL.Base.BLLContext.Transaction">
            <summary>
            事务,如果没有事务则会创建事务,不能用来判断是否有事务
            </summary>
        </member>
        <member name="P:PL.Base.BLLContext.ts">
             <summary>
            Transaction的别名 
             </summary>
        </member>
        <member name="M:PL.Base.BLLContext.CommitTransaction">
            <summary>
            提交上下文事务
            </summary>
        </member>
        <member name="M:PL.Base.BLLContext.RollbackTransaction">
            <summary>
            回滚上下文事务
            </summary>
        </member>
        <member name="T:PL.Base.BLLContextLog">
            <summary>
            上下文日志
            </summary>
        </member>
        <member name="P:PL.Base.BLLContextLog.KeyNo">
            <summary>
            KeyNo
            </summary>
        </member>
        <member name="M:PL.Base.BLLContextLog.AppendLine(System.String)">
            <summary>
            追加日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.BLLContextLog.Append(System.String)">
            <summary>
            追加日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="F:PL.Base.EciContext.Canceled">
            <summary>
            后续操作取消
            </summary>
        </member>
        <member name="P:PL.Base.EciContext.Request">
            <summary>
            请求
            </summary>
        </member>
        <member name="P:PL.Base.EciContext.Response">
            <summary>
            响应
            </summary>
        </member>
        <member name="F:PL.Base.EciContext.UserInfo">
            <summary>
            用户身份信息
            </summary>
        </member>
        <member name="P:PL.Base.EciContext.Transaction">
             <summary>
            *注意：已经过时，尽量不要使用该事务*
             </summary>
        </member>
        <member name="M:PL.Base.EciContext.CommitTransaction">
            <summary>
            提交上下文事务
            </summary>
        </member>
        <member name="M:PL.Base.EciContext.RollbackTransaction">
            <summary>
            回滚上下文事务
            </summary>
        </member>
        <member name="T:PL.Base.CurdType">
            <summary>
            基本操作
            </summary>
        </member>
        <member name="F:PL.Base.CurdType.None">
            <summary>
            默认值
            </summary>
        </member>
        <member name="F:PL.Base.CurdType.Search">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:PL.Base.CurdType.Load">
            <summary>
            加载一笔记录
            </summary>
        </member>
        <member name="F:PL.Base.CurdType.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:PL.Base.CurdType.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.Head">
            <summary>
            请求头信息
            </summary>
        </member>
        <member name="F:PL.Base.EciRequest.Asyn">
            <summary>
            异步执行
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.ServiceId">
            <summary>
            服务ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.ProgressTaskId">
            <summary>
            进度任务ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.ThreadTaskId">
            <summary>
            异步任务ID
            </summary>
        </member>
        <member name="F:PL.Base.EciRequest.DataSet">
            <summary>
            尽量少用
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.Type">
            <summary>
            业务操作类型
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.IsAdd">
            <summary>
            新增
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.NeedGlobalSession">
            <summary>
            是否需要全局Session
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.NeedSummary">
            <summary>
            需要汇总信息
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.Confirmed">
            <summary>
            需要汇总信息
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.KeyField">
            <summary>
            ***不要使用***
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.Xml">
            <summary>
            XML
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.BizName">
            <summary>
            业务对象名称
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.Json">
            <summary>
            JSON
            </summary>
        </member>
        <member name="P:PL.Base.EciRequest.Key">
            <summary>
            尽量少用Key
            </summary>
        </member>
        <member name="M:PL.Base.EciRequest.Serialize">
            <summary>
            序列化
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciRequest.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="json"></param>
        </member>
        <member name="M:PL.Base.EciRequest.APIDeserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="json"></param>
        </member>
        <member name="T:PL.Base.EciRequestHead">
            <summary>
            请求HEAD
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.RequestId">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.RequestTime">
            <summary>
            请求时间
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.RequestToken">
            <summary>
            请求Token
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.ProgressTaskId">
            <summary>
            进度任务ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.ThreadTaskId">
            <summary>
            异步任务ID
            </summary>
        </member>
        <member name="M:PL.Base.EciRequestHead.CreateRequestToken">
            <summary>
            加签
            </summary>
        </member>
        <member name="M:PL.Base.EciRequestHead.ValidateRequest">
            <summary>
            验签
            </summary>
        </member>
        <member name="M:PL.Base.EciRequestHead.GetAssemblyName">
            <summary>
            获取程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciRequestHead.GetFullClassName">
            <summary>
            获取完整类名
            </summary>
            <returns></returns>
        </member>
        <member name="P:PL.Base.EciRequestHead.ServiceId">
            <summary>
            服务ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.SessionId">
            <summary>
            会话ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.SOA">
            <summary>
            面向服务
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.Data">
            <summary>
            包含用户登录信息、和页面URL地址参数和人工添加的参数
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.Item(System.String)">
            <summary>
            数据
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciRequestHead.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.EciRequestHead.Serialize">
            <summary>
            序列化
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciRequestHead.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="json"></param>
        </member>
        <member name="P:PL.Base.EciRequestHead.IsSilverlight">
            <summary>
            是否是Silverlight
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.EmployeeId">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.LoginNo">
            <summary>
            登录帐号
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.CompanyId">
            <summary>
            公司ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.CompanyCode">
            <summary>
            公司代码
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.DeptId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.DeptCode">
            <summary>
            部门代码
            </summary>
        </member>
        <member name="P:PL.Base.EciRequestHead.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="F:PL.Base.EciResponse.RequestTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.EciResponse.ResponseTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.StackTrace">
            <summary>
            操作信息提示
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.Result">
            <summary>
            返回对象
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.StatusCode">
            <summary>
            返回状态
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.Message">
            <summary>
            操作信息提示
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.ExportTask">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.Success">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="M:PL.Base.EciResponse.ToAjaxJsonString">
            <summary>
            将实体对象转成Json格式，注意Key全部转换成小写，以适应Javascript的写法
            </summary>
            <returns></returns>
        </member>
        <member name="P:PL.Base.EciResponse.ErrorCode">
            <summary>
            异常代码
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.Key">
            <summary>
            一般用于返回主键值
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.Xml">
            <summary>
            XML
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.Json">
            <summary>
            Json数据
            </summary>
        </member>
        <member name="P:PL.Base.EciResponse.SummaryInfo">
            <summary>
            汇总数据
            </summary>
        </member>
        <member name="F:PL.Base.EciResponse.Paging">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="M:PL.Base.EciResponse.Serialize">
            <summary>
            序列化
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciResponse.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="json"></param>
        </member>
        <member name="M:PL.Base.EciResponse.APISerialize">
            <summary>
            序列化
            </summary>
            <returns></returns>
        </member>
        <member name="P:PL.Base.Response.success">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="P:PL.Base.Response.statusCode">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:PL.Base.Response.message">
            <summary>
            操作信息提示
            </summary>
        </member>
        <member name="P:PL.Base.Response.requestTime">
            <summary>
            请求时间
            </summary>
        </member>
        <member name="P:PL.Base.Response.responseTime">
            <summary>
            响应时间
            </summary>
        </member>
        <member name="P:PL.Base.Response.cost">
            <summary>
            耗时
            </summary>
        </member>
        <member name="P:PL.Base.Response.paging">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="T:PL.Base.Paging">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="F:PL.Base.Paging.Index">
            <summary>
            页码
            </summary>
        </member>
        <member name="F:PL.Base.Paging.Size">
            <summary>
            每页显示记录数
            </summary>
        </member>
        <member name="F:PL.Base.Paging.RecordCount">
            <summary>
            总记录数
            </summary>
        </member>
        <member name="F:PL.Base.Paging.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="F:PL.Base.Paging.SortExpression">
            <summary>
            排序
            </summary>
        </member>
        <member name="F:PL.Base.Paging.QuerySql">
            <summary>
            上一次查询执行的Sql语句
            </summary>
        </member>
        <member name="F:PL.Base.Paging.CountSql">
            <summary>
            查询数量的SQL语句
            </summary>
        </member>
        <member name="F:PL.Base.Paging.OutSql">
            <summary>
            分页外层SQL
            </summary>
        </member>
        <member name="F:PL.Base.Paging.IsExport">
            <summary>
            是否是导出
            </summary>
        </member>
        <member name="F:PL.Base.Paging.MaxCount">
             <summary>
            最大数量
             </summary>
        </member>
        <member name="F:PL.Base.Paging.MaxCountRaiseException">
            <summary>
            超过最大数量是否抛出异常
            </summary>
        </member>
        <member name="F:PL.Base.Paging.IsOverMaxCount">
            <summary>
            是否超过最大数量
            </summary>
        </member>
        <member name="M:PL.Base.Paging.Serialize">
            <summary>
            序列化
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Paging.Serialize(System.Boolean)">
            <summary>
            序列化
            </summary>
            <param name="keyLower"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Paging.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="json"></param>
        </member>
        <member name="T:PL.Base.UserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:PL.Base.UserInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.Platform">
            <summary>
            平台
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.EmployeeId">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.LoginNo">
            <summary>
            用户登录名
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.UserName">
            <summary>
            用户真实姓名
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.CompanyId">
            <summary>
            公司ID
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.CompanyCode">
            <summary>
            公司编码
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.CompanyName">
            <summary>
            公司名称
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.GroupCode">
            <summary>
            集团编码
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.GroupName">
            <summary>
            集团名称
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.CustomCode">
            <summary>
            关区代码
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.CustomName">
            <summary>
            关区名称
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.CIQCode">
            <summary>
            国检代码
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.OrgCode">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.TyCode">
            <summary>
            统一编码
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.DeptId">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.DeptCode">
             <summary>
            部门编码
             </summary>
        </member>
        <member name="P:PL.Base.UserInfo.DeptName">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.Data">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:PL.Base.UserInfo.Item(System.String)">
            <summary>
            取值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.ErrorCode">
            <summary>
            Web异常 9001-9999
            </summary>
            <summary>
            SSO异常 8001-8999
            </summary>
            <summary>
            Report异常 7001-7999
            </summary>
            <summary>
            UIControl异常 6001-6500
            </summary>
            <summary>
            BLL异常 5001-5999
            </summary>
            <summary>
            BLL异常 4001-4999
            </summary>
            <summary>
            Common异常 1-999
            </summary>
            <summary>
            BLL异常 2001-2999
            </summary>
            <summary>
            SOA异常 1000-2000
            </summary>
            <summary>
            实体类异常 3001-3999
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09001">
            <summary>
             查询页面异常,查询语句不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09002">
            <summary>
             查询页面异常,没有返回数据
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09003">
            <summary>
             放大镜异常异常,没有返回数据
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09004">
            <summary>
             查询页面异常,页面上没有gvData控件
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09005">
            <summary>
             查询控件异常,控件上没有gvData控件
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09006">
            <summary>
            应用程序扩展配置异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09007">
            <summary>
            无法加载应用程序扩展程序集
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09008">
            <summary>
            无法加载应用程序扩展类
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09009">
            <summary>
            应用程序扩展类没有继承统一接口
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09010">
            <summary>
             查询控件异常,查询语句不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09011">
            <summary>
            异步调用异常，没有实现方法
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09012">
            <summary>
            导出EXCEL异常,字段不存在
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09013">
            <summary>
            下拉框异常，有条件筛选的情况下不能使用缓存
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI09014">
            <summary>
            列表控件中没有chkSelect复选框
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI08001">
            <summary>
             权限模块配置异常，格式不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI08002">
            <summary>
            权限模块加载异常,无法加载程序集
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI08003">
            <summary>
            权限模块加载异常,无法创建类
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI08004">
            <summary>
            权限模块加载异常,没有继承统一接口
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI08005">
            <summary>
            获取权限异常,参数FunctionId不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI08006">
            <summary>
            获取权限异常,没有获取到任何权限
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI08007">
            <summary>
            不支持的权限模式
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07001">
            <summary>
            报表扩展配置错误
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07002">
            <summary>
            报表模块无法加载程序集
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07003">
            <summary>
            报表模块无法创建类
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07004">
            <summary>
            报表模块类,没有继承IReport类
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07005">
            <summary>
            报表数据源中已经存在表,不可以重复添加
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07006">
            <summary>
            数据源中不存在表
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07007">
            <summary>
            明细设置错误，不存在行
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07008">
            <summary>
            调用报表组件时,没有设置报表的数据源
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07009">
            <summary>
            主表记录要求只能含有一笔数据
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07010">
            <summary>
            模板文件格式不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07011">
            <summary>
            获取Excel行异常,没有获取到Excel的第N行
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07012">
            <summary>
            获取Excel列异常,没有获取到Excel的第N行的M列
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07013">
            <summary>
            列超出范围
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07014">
            <summary>
            没有查询到报表
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07015">
            <summary>
            配置的主数据源不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07016">
            <summary>
            报表明细配置错误
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07017">
            <summary>
            报表明细配置错误,开始行必须大于
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07018">
            <summary>
            报表明细配置错误:没有配置名称
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07019">
            <summary>
            报表配置错误,没有配置查询语句
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI07020">
            <summary>
            报表明细配置,查询语句异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06001">
            <summary>
            复选框控件异常，没有设置 TrueValue、FalseValue 对应的值
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06002">
            <summary>
            日期框控件异常,值不是日期格式
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06003">
            <summary>
            文本框异常，整数部分超过XX位
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06004">
            <summary>
            文本框异常，小数部分超过XX位
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06005">
            <summary>
            下拉框获取数据源发生异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06006">
            <summary>
            下拉框配置错误
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06007">
            <summary>
            GridView中没有列
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06008">
            <summary>
            EGridView控件没有设置KeyField属性
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06009">
            <summary>
            ETabItem必须放置在ETab内
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06010">
            <summary>
            列表控件TwoWay属性异常,没有找到控件
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06011">
            <summary>
            上传异常,没有选择文件
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI06012">
            <summary>
            不支持的字典类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05001">
            <summary>
            配置程序异常，没有配置主键
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05002">
            <summary>
            配置程序使用异常，配置了级联条件但没有传入值
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05003">
            <summary>
            配置程序异常,创建查询语句异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05004">
            <summary>
            配置程序异常,创建编辑语句异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05005">
            <summary>
            没有配置对应的放大镜类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05006">
            <summary>
            没有配置放大镜转换代码
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05007">
            <summary>
            没有配置放大镜转换名称
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05008">
            <summary>
            没有配置放大镜转换语句
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05009">
            <summary>
            没有配置对应的下拉框类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05010">
            <summary>
            创建数据字典异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05011">
            <summary>
            批量修改创建元素失败
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05012">
            <summary>
            程序配置异常，表格布局配置不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05013">
            <summary>
            编辑页面创建元素失败
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05014">
            <summary>
            至少选择一列作为显示内容
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05015">
            <summary>
            没有设置复选框的TrueValue和FalseValue
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05016">
            <summary>
            列表控件中不存在请求的数据项
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05017">
            <summary>
            标准功能按钮的ControlID不能为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05018">
            <summary>
            配置错误，没有找到功能扩展记录ID
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05019">
            <summary>
            复选框配置有误
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05020">
            <summary>
            平台没有实现控件类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05021">
            <summary>
            配置不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05022">
            <summary>
            无法识别的后台服务数据类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05023">
            <summary>
            没有实现功能
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05024">
            <summary>
            没找到上级元素
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05025">
            <summary>
            配置程序异常，控件没有配置ID
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05026">
            <summary>
             类中没有实现方法
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05027">
            <summary>
            [客户端]无法加载[" + className + "]类,加载格式为:[程序集$类名] 
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05028">
            <summary>
             [客户端]无法加载[" + className + "]类,请检查
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05029">
            <summary>
            [客户端][" + className + "]没有正确继承ClientAction 
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI05030">
            <summary>
            页面[" + pageCode + "]客户端实现配置异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04001">
            <summary>
            查询语句不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04002">
            <summary>
            执行语句不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04003">
            <summary>
            数据访问异常,查询后结果为Null 
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04004">
             <summary>
            数据库操作异常 reader is null!
             </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04005">
            <summary>
            数据库连接配置异常，连接字符串为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04006">
            <summary>
            数据库连接配置异常，数据库类型为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04007">
             <summary>
            获取参数异常，不存在参数
             </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI04008">
             <summary>
            查询异常,没有查询到任何数据
             </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00001">
            <summary>
            程序集,无法加载类
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00002">
            <summary>
            类XX,没有正确继承T
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00003">
            <summary>
            软件授权判断
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00004">
            <summary>
            Convert 无法获取参数:" + item+"[参数转换方法]
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00005">
            <summary>
            查询配置操作类型不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00006">
            <summary>
            查询配置数据类型不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00007">
            <summary>
            创建基本查询条件异常，没有设置查询字段
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00008">
            <summary>
            创建基本查询条件异常，查询类型不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00009">
            <summary>
            你访问的DataRow中没有[" + "_PL_CHECKED" + "]列
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00010">
            <summary>
            访问的实体中没有[" + "_PL_CHECKED" + "]数据项
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00011">
            <summary>
            字符转日期-不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00012">
            <summary>
            字符转日期-格式不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00013">
            <summary>
            字符转数字-不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00014">
            <summary>
            字符转数字-格式不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00015">
            <summary>
            字符转整数-不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00016">
            <summary>
            字符转整数-格式不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00017">
            <summary>
            参数出现多次,请正确设置参数
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00018">
            <summary>
            执行方法Upgrade异常,传入参数ListEntity不能为Null
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00019">
            <summary>
            执行方法Downgrade异常,传入参数ListEntity不能为Null
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00020">
            <summary>
            执行ToJson方法异常,参数list不能为Null
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00021">
            <summary>
            系统获取编号异常，参数type不可以为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00022">
            <summary>
            获取应用程序路径异常，没有初始化该属性.此属性一般在应用程序启动时初始化
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00023">
            <summary>
            读取数据配置异常,不存在类型[XXX]
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00024">
            <summary>
            获取表结构异常,目前只支持Oracle和SqlServer数据库
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00025">
            <summary>
            查询配置异常，应该有三个部分
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00026">
            <summary>
            查询配置异常,无法识别的数据类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00027">
            <summary>
            应用程序没有配置注册码
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00028">
            <summary>
            应用程序注册码不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00029">
            <summary>
            当前软件已经过期
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00030">
            <summary>
            当前软件已经过期
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI00031">
            <summary>
            验证码不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI02001">
            <summary>
            没有实现删除功能
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI02002">
            <summary>
            没有实现加载功能
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI02003">
            <summary>
            没有实现保存功能
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI02004">
            <summary>
            没有实现查询功能
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01001">
            <summary>
            服务调用没有传入ServiceId
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01002">
            <summary>
            服务调用没有获取到ClassName
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01003">
            <summary>
            SO不支持基本操作类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01004">
            <summary>
            删除数据异常,没有传入[Request.ListKey]参数
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01005">
            <summary>
            加载数据异常,没有传入[Request.Key]参数
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01006">
            <summary>
             数据加载异常,无法查询到数据
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01007">
            <summary>
            数据加载异常,查询到多笔数据 
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01008">
            <summary>
             保存数据异常,没有传入[Request.Entity]参数
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01009">
            <summary>
            服务端无法加载SO类 
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01010">
            <summary>
            服务对象没有继承BaseSO 
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01011">
            <summary>
            请求无法获取服务通道 
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01012">
            <summary>
            服务请求异常，非法请求
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01013">
            <summary>
            服务请求异常，重复的请求
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01014">
            <summary>
            服务请求异常,请求的报文格式不正确
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI01015">
            <summary>
            调用服务异常，没有传入ServiceId
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03001">
            <summary>
            修改表时异常，没有设置要修改的数据内容
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03002">
            <summary>
            创建更新语句时，出现异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03003">
            <summary>
            没有设置要修改的数据项
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03004">
            <summary>
            更新表时异常,没有设置主键
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03005">
            <summary>
            根据某个主键更新表，没有设置主键的值
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03006">
            <summary>
            根据某个主键更新表，设置的主键值为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03007">
            <summary>
            实体.Table为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03008">
            <summary>
            创建新增语句时，没有设置新增的数据内容
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03009">
            <summary>
            创建新增语句时，出现异常
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03010">
            <summary>
            删除XX表数据时,没有设置一个主键进行删除
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03011">
            <summary>
            删除XX表数据时,没有设置主键的值
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03012">
            <summary>
            删除XX表数据时,设置主键的值为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03013">
            <summary>
            实体操作不可以重复调用Where方法
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03014">
            <summary>
            实体类查询异常,没有设置主键
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03015">
            <summary>
            实体类查询异常,设置了主键，但值为空
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03016">
            <summary>
            删除数据异常,没有设置任何条件
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03017">
            <summary>
            删除数据异常,没有设置任何条件
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03018">
            <summary>
            修改数据异常，没有设置要修改的对象
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03019">
            <summary>
            修改数据异常，没有设置要修改的数据项
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03020">
            <summary>
            修改数据异常，没有设置更新条件
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03021">
            <summary>
            执行失败，无法识别的操作类型
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03022">
            <summary>
            获取列异常,不存在列
            </summary>
        </member>
        <member name="F:PL.Base.ErrorCode.ECI03023">
            <summary>
            DataTable转实体异常,
            </summary>
        </member>
        <member name="T:PL.Base.EciServerHelper">
            <summary>
            框架初始化
            </summary>
        </member>
        <member name="M:PL.Base.EciServerHelper.InitFramework">
            <summary>
            框架初始化
            </summary>
        </member>
        <member name="M:PL.Base.EciServerHelper.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:PL.Base.EciServerHelper.GetDBType(System.String)">
            <summary>
            获取数据库类型
            </summary>
            <param name="connType"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciSysSOALog">
            <summary>
            EciSysSOALog
            </summary>
        </member>
        <member name="M:PL.Base.EciSysSOALog.WriteLog(PL.Base.EciContext)">
            <summary>
            记录日志
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.EciSysSOALog.GetSysLog(PL.Base.EciContext)">
            <summary>
            记录日志
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:PL.Base.Log4">
            <summary>
            日志记录
            </summary>
        </member>
        <member name="M:PL.Base.Log4.Fatal(System.Type,System.Exception)">
            <summary>
            严重异常
            </summary>
            <param name="t"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.Log4.Fatal(System.Type,System.String)">
            <summary>
            严重异常
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:PL.Base.Log4.Error(System.Type,System.Exception)">
            <summary>
            异常
            </summary>
            <param name="t"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.Log4.Error(System.Type,System.String)">
            <summary>
            异常
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:PL.Base.Log4.Warn(System.Type,System.Exception)">
            <summary>
            警告
            </summary>
            <param name="t"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.Log4.Warn(System.Type,System.String)">
            <summary>
            警告
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="M:PL.Base.Log4.Info(System.Type,System.Exception)">
            <summary>
            信息
            </summary>
            <param name="t"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.Log4.Info(System.Type,System.String)">
            <summary>
            信息
            </summary>
            <param name="t"></param>
            <param name="msg"></param>
        </member>
        <member name="T:PL.Base.ComputerInfo">
            <summary>
            服务器信息
            </summary>
        </member>
        <member name="P:PL.Base.ComputerInfo.LocalIP">
            <summary>
            获取本机的IP
            </summary>
        </member>
        <member name="P:PL.Base.ComputerInfo.LocalMac">
            <summary>
            获取本机的MAC
            </summary>
        </member>
        <member name="P:PL.Base.ComputerInfo.HostName">
            <summary>
            获取当前电脑主机名
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DataColumnHelper">
            <summary>
            数据列辅助类
            </summary>
        </member>
        <member name="M:PL.Base.DataColumnHelper.GetTableColumns(System.String)">
            <summary>
            获取表结构
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DataToDBOption">
            <summary>
            数据表保存到数据库参数
            </summary>
        </member>
        <member name="F:PL.Base.DataToDBOption.BatchSize">
            <summary>
            批量提交条数
            </summary>
        </member>
        <member name="F:PL.Base.DataToDBOption.ODAC">
            <summary>
            是否使用ODAC
            </summary>
        </member>
        <member name="M:PL.Base.WeekHelper.WeekCountOfYear(System.Int32)">
            <summary>
            一年有多少周
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.WeekHelper.WeekOfDate(System.DateTime)">
            <summary>
            指定日期是周几
            </summary>
            <param name="currentDate"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.WeekHelper.GetWeekString(System.DateTime)">
            <summary>
            获取指定日期的星期
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.WeekHelper.WeekOfYear(System.DateTime)">
            <summary>
            获取指定日期在整年中属于第几周
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DataExtend">
            <summary>
            数据扩展
            </summary>
            <summary>
            数据扩展
            </summary>
        </member>
        <member name="M:PL.Base.DataExtend.BindToContext(PL.Base.SearchResult,PL.Base.EciContext)">
            <summary>
            查询结果合并到上下文
            </summary>
            <param name="result">查询结果</param>
            <param name="context">上下文</param>
        </member>
        <member name="M:PL.Base.DataExtend.NullOrEmptyException(System.String,System.String)">
            <summary>
            是否为空
            </summary>
            <param name="key"></param>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.DataExtend.NullOrEmpty(System.String)">
            <summary>
            如果为Null 返回True，如果不等于Null 然后Trim后判断是否有值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.NullOrEmpty(System.String,System.String)">
            <summary>
            判断是否为空，如果为空则抛出异常
            </summary>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.HasValue(System.String)">
            <summary>
            如果为Null 返回false，如果不等于Null 然后Trim后判断是否有值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToBool(System.Nullable{System.Double})">
            <summary>
            浮点型转化为布尔型 1 True 其他 false
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToBool(System.String)">
            <summary>
            判断是否是True   Y、1 、true
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.Throw(System.Boolean,System.String)">
            <summary>
            抛出异常
            </summary>
            <param name="value"></param>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.DataExtend.GetSeason(System.DateTime)">
            <summary>
            获取季度
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDouble(System.String)">
            <summary>
            字符转成数值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDoubleEx(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDouble(System.String,System.String)">
            <summary>
            字符转成数值
            </summary>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDoubleNullOrEmptyToZero(System.String)">
            <summary>
            字符转成数值，如果是空则转成0 
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDoubleNullOrEmptyToZero(System.String,System.String)">
            <summary>
            字符转成数值，如果是空则转成0 
            </summary>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDoubleNullToZero(System.Nullable{System.Double})">
            <summary>
            转成数值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDoubleNullable(System.String,System.String)">
            <summary>
            转成数值
            </summary>
            <param name="key"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDoubleNullable(System.String)">
            <summary>
            字符转成数值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToThousand(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToThousand(System.Int32)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToThousand(System.Nullable{System.Double})">
            <summary>
            把数字转成千分位字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToThousand(System.Double)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToThousand(System.Double,System.Int32)">
            <summary>
            把数字转成千分位字符串
            </summary>
            <param name="input"></param>
            <param name="decimalLength"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToStringNullToEmpty(System.Nullable{System.Decimal})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToStringNullToEmpty(System.Nullable{System.Double})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToStringNullToEmpty(System.Nullable{System.DateTime})">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.NotNull(System.String,System.String)">
            <summary>
            XXX不可以为空  注意：提示信息会自动加上【不可以为空】
            </summary>
            <param name="key"></param>
            <param name="message">注意：提示信息会自动加上【不可以为空】</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToCode(System.String)">
            <summary>
            获取字符串的代码部分
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToName(System.String)">
            <summary>
            获取字符串的名称部分
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToInCondition(System.String)">
            <summary>
            转换成('A','B') 注意包括括号
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToYN(System.Boolean)">
            <summary>
            转成YN   true=>Y  false=>N
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.GetParam(System.String,System.String)">
            <summary>
            获取参数
            </summary>
            <param name="source"></param>
            <param name="paramKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.GetParamList(System.String)">
            <summary>
            获取参数列表 { }
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.GetParamList(System.String,System.String,System.String)">
            <summary>
            获取参数列表
            </summary>
            <param name="key"></param>
            <param name="regStart"></param>
            <param name="regEnd"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToOneString(System.Collections.Generic.List{System.String})">
            <summary>
            列表数据转化成 A,B,C格式
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToOneString(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            列表数据转化成 A,B,C格式
            </summary>
            <param name="list"></param>
            <param name="seperator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToInCondition(System.Collections.Generic.List{System.String})">
            <summary>
            转换成('A','B') 注意包括括号
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToOrCondition(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            转换成(A.CODE='01' OR A.CODE='02') 注意包括括号
            </summary>
            <param name="list"></param>
             <param name="dataField"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToOrLikeCondition(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            转换成(A.CODE='01' OR A.CODE='02') 注意包括括号
            </summary>
            <param name="list"></param>
             <param name="dataField"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToOrCondition(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            转换成(A.CODE='01' OR A.CODE='02') 注意包括括号
            </summary>
            <param name="list"></param>
             <param name="dataField"></param>
             <param name="operation">= like </param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.CombinePath(System.String,System.String,System.Boolean)">
            <summary>
            组合路径
            </summary>
            <param name="path"></param>
            <param name="appendPath"></param>
            <param name="notExistsCreate">如果没有此文件夹将创建</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.RemoveStartChar(System.String)">
            <summary>
            移除第一个字符
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToSBC(System.String)">
            <summary>
            半角转全角
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToDBC(System.String)">
            <summary>
            全角转半角
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToSortExpression(System.String)">
            <summary>
            转成排序SQL语句[ 如果输入为空返回空，如果输入不为空 返回 ORDER BY +输入内容 ]
            </summary>
            <param name="sortExpression"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AddUrlParam(System.String,System.String,System.String)">
            <summary>
            链接Url参数
            </summary>
            <param name="input"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AddUrlParam(System.String,System.String)">
            <summary>
            链接Url参数
            </summary>
            <param name="input"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ExcelColumnIndexToName(System.Int32)">
            <summary>
            转成EXCEL列标题   例如 1转成 A  2转成 B
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ExcelColumnNameToIndex(System.String)">
            <summary>
            注意返回值  A 返回 1  B返回2
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.WhenNullOrEmpty(System.String,System.String)">
            <summary>
            字符串如果为空则设置默认值
            </summary>
            <param name="input"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.WhenHasValue(System.String,System.String)">
            <summary>
            字符串如果不为空则返回
            </summary>
            <param name="input"></param>
            <param name="returnValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.FocusDataField(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <param name="dataField"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AddWhereRemoveAnd(System.String)">
            <summary>
            增加Where 移除 首 AND 
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AutoJionCondition(System.String,System.String)">
            <summary>
            拼接SQL语句 拼接查询条件 条件永远带 AND 
            </summary>
            <param name="sql"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.RemoveColumnWhenExists(System.Data.DataTable,System.String)">
            <summary>
            删除列（如果不存在不管）
            </summary>
            <param name="datatable"></param>
            <param name="columns">A,B,C,D,E……</param>
        </member>
        <member name="M:PL.Base.DataExtend.AddColumnWhenNotExists(System.Data.DataTable,System.String)">
            <summary>
            增加列（如果存在则不加）
            </summary>
            <param name="datatable"></param>
            <param name="columns">A,B,C,D,E……</param>
        </member>
        <member name="M:PL.Base.DataExtend.NullOrEmpty(System.Data.DataTable)">
            <summary>
            判断表是否为Null 或者 数据行为空
            </summary>
            <param name="datatable"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.HasRow(System.Data.DataTable)">
            <summary>
            是否有数据行
            </summary>
            <param name="datatable"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.NotNull(System.Data.DataTable)">
            <summary>
            检测DataTable是否有数据，如果没有数据则抛出异常【查询异常,没有查询任何数据】
            </summary>
            <param name="datatable"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.NotNull(System.Data.DataTable,System.String)">
            <summary>
            检测DataTable是否有数据，如果没有数据则抛出异常信息
            </summary>
            <param name="datatable"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToListEntity(System.Data.DataTable)">
            <summary>
            DataTable数据转成抽象实体集合
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToListEntity``1(System.Data.DataTable)">
            <summary>
            DataTable数据转成具体实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToListEntity``1(System.Data.DataTable,System.Boolean)">
            <summary>
            DataTable数据转成具体实体集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="defaultView"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToListEntity(System.Data.DataRow[])">
            <summary>
            转成实体集合
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToList(System.Data.DataTable,System.String)">
            <summary>
            转换成List 
            </summary>
            <param name="data"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToList(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            转成List[String]
            </summary>
            <param name="data"></param>
            <param name="fieldName"></param>
            <param name="distinct"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToEntity(System.Data.DataTable)">
            <summary>
            转成实体类：如果DataTable没有数据行，则返回Null
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ToEntity``1(System.Data.DataTable)">
            <summary>
            表转成具体的实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.ChangeKeyColumnName(System.Data.DataTable,System.String)">
            <summary>
            将主键具体化
            </summary>
            <param name="data"></param>
            <param name="keyColumnName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AddCheckedColumn(System.Data.DataTable)">
            <summary>
            增加选择列
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AddRowNum(System.Data.DataTable)">
            <summary>
            增加序号（序号从1开始） ColumnName=ROWNUM
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AddRowNum(System.Data.DataTable,System.Int32)">
            <summary>
            增加序号 ColumnName=ROWNUM
            </summary>
            <param name="data"></param>
            <param name="startIndex">指定开始编号</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.AddNewRow(System.Data.DataTable,System.Int32)">
            <summary>
            增加行
            </summary>
            <param name="data"></param>
            <param name="addCount"></param>
        </member>
        <member name="M:PL.Base.DataExtend.ConvertNameYN(System.Data.DataTable,System.String)">
            <summary>
            列转中文 是否  (Y,N,1,0)
            </summary>
            <param name="data"></param>
            <param name="field"></param>
        </member>
        <member name="M:PL.Base.DataExtend.ConvertName(System.Data.DataTable,System.String,System.String,System.Boolean)">
            <summary>
            转中文
            </summary>
            <param name="data"></param>
            <param name="field"></param>
            <param name="config"></param>
            <param name="isAdd"></param>
        </member>
        <member name="M:PL.Base.DataExtend.KeepOne(System.Data.DataTable)">
            <summary>
            移除DataTable数据，只保留第一行
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.KeepRows(System.Data.DataTable,System.Int32)">
            <summary>
            移除DataTable数据，只保留第指定行
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.CheckedAll(System.Data.DataTable)">
            <summary>
            选中所有行
            </summary>
        </member>
        <member name="M:PL.Base.DataExtend.JoinCodeToName(System.Data.DataTable,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="codeColumns">代码字段名</param>
        </member>
        <member name="M:PL.Base.DataExtend.JoinCodeToName(System.Data.DataTable,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="codeColumn">代码字段</param>
            <param name="nameColumn">名称字段</param>
        </member>
        <member name="M:PL.Base.DataExtend.ToList(System.String)">
            <summary>
            字符串转成集合
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataExtend.RemoveEmpty(System.Collections.Generic.List{System.String})">
            <summary>
            移除空格
            </summary>
            <param name="listInput"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.ObjectExtend">
            <summary>
            Object扩展
            </summary>
        </member>
        <member name="M:PL.Base.ObjectExtend.ToBool(System.Object)">
            <summary>
            对象转换成布尔值  1,Y 
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ObjectExtend.DefaultOrderBy(PL.Base.Paging,System.String)">
            <summary>
            默认排序
            </summary>
            <param name="paging"></param>
            <param name="sortExpression"></param>
        </member>
        <member name="T:PL.Base.FNameItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FNameItem.DataField">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FNameItem.Type">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FNameItem.FunctionName">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FNameItem.IsCompany">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.FNameItem.AsName">
            <summary>
            
            </summary>
        </member>
        <member name="T:PL.Base.ILogWriter">
            <summary>
            日志接口
            </summary>
        </member>
        <member name="M:PL.Base.ILogWriter.Write(System.String,System.String)">
            <summary>
            日志记录
            </summary>
            <param name="message"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.ILogWriter.Write(System.String,System.String,System.Boolean)">
            <summary>
            日志记录
            </summary>
            <param name="message"></param>
            <param name="fileName"></param>
            <param name="ignoreTime">忽略日期</param>
        </member>
        <member name="T:PL.Base.Log">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:PL.Base.Log.WriteError(System.Exception)">
            <summary>
            记录错误日志
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.Log.WriteError(System.String)">
            <summary>
            记录错误日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Log.Write(System.String,System.String)">
            <summary>
            日志记录
            </summary>
            <param name="message"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.Log.Write(System.String,System.String,System.Boolean)">
            <summary>
            日志记录
            </summary>
            <param name="message"></param>
            <param name="fileName"></param>
            <param name="ignoreTime"></param>
        </member>
        <member name="M:PL.Base.Log.Debug(System.String,System.String)">
            <summary>
            开发模式下输出
            </summary>
            <param name="message"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:PL.Base.Log.Performance(System.String)">
            <summary>
            性能监控日志
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Log.Debug(System.String)">
            <summary>
            开发调试
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Log.SsoLog(System.String)">
            <summary>
            只有Web.config中SsoLog=true才生效
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.Log.SsoLog(System.Exception)">
            <summary>
            登录日志
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.Log.SsoLog(System.String,System.Exception)">
            <summary>
            登录日志
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:PL.Base.CompressHelper.Compress(System.String)">
            <summary>
            Compress xml data
            </summary>
            <param name="inData"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CompressHelper.Compress(System.Byte[])">
            <summary>
            Compress bytes data
            </summary>
            <param name="inData"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.CompressHelper.Decompress(System.Byte[])">
            <summary>
            Decompress bytes data
            </summary>
            <param name="inData"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciWebClient">
            <summary>
            页面请求辅助类
            </summary>
        </member>
        <member name="M:PL.Base.EciWebClient.GetContent(System.String)">
            <summary>
            获取页面内容
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciWebClient.GetContent(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciWebClient.GetContent(System.String,System.String,System.Int32)">
            <summary>
            POST
            </summary>
            <param name="url"></param>
            <param name="data"></param>
            <param name="timeout"></param>
        </member>
        <member name="M:PL.Base.EciWebClient.WebResponseGet(System.Net.HttpWebRequest)">
            <summary> 
            Process the web response. 
            </summary> 
            <param name="webRequest">The request object.</param> 
            <returns>The response data.</returns> 
        </member>
        <member name="M:PL.Base.FtpHelper.#ctor">
            <summary> 
            缺省构造函数 
            </summary> 
        </member>
        <member name="M:PL.Base.FtpHelper.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary> 
            构造函数 
            </summary> 
            <param name="remoteHost"></param> 
            <param name="remotePath"></param> 
            <param name="remoteUser"></param> 
            <param name="remotePass"></param> 
            <param name="remotePort"></param> 
        </member>
        <member name="F:PL.Base.FtpHelper.strRemoteHost">
            <summary> 
            FTP服务器IP地址 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.strRemotePort">
            <summary> 
            FTP服务器端口 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.strRemotePath">
            <summary> 
            当前服务器目录 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.strRemoteUser">
            <summary> 
            登录用户账号 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.strRemotePass">
            <summary> 
            用户登录密码 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.bConnected">
            <summary> 
            是否登录 
            </summary> 
        </member>
        <member name="M:PL.Base.FtpHelper.Connect">
            <summary> 
            建立连接  
            </summary> 
        </member>
        <member name="M:PL.Base.FtpHelper.DisConnect">
            <summary> 
            关闭连接 
            </summary> 
        </member>
        <member name="T:PL.Base.FtpHelper.TransferType">
            <summary> 
            传输模式:二进制类型、ASCII类型 
            </summary> 
        </member>
        <member name="M:PL.Base.FtpHelper.SetTransferType(PL.Base.FtpHelper.TransferType)">
            <summary> 
            设置传输模式 
            </summary> 
            <param name="ttType">传输模式</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.GetTransferType">
            <summary> 
            获得传输模式 
            </summary> 
            <returns>传输模式</returns> 
        </member>
        <member name="M:PL.Base.FtpHelper.Dir(System.String)">
            <summary> 
            获得文件列表 
            </summary> 
            <param name="strMask">文件名的匹配字符串</param> 
            <returns></returns> 
        </member>
        <member name="M:PL.Base.FtpHelper.GetFileSize(System.String)">
            <summary> 
            获取文件大小 
            </summary> 
            <param name="strFileName">文件名</param> 
            <returns>文件大小</returns> 
        </member>
        <member name="M:PL.Base.FtpHelper.Delete(System.String)">
            <summary> 
            删除 
            </summary> 
            <param name="strFileName">待删除文件名</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.Rename(System.String,System.String)">
            <summary> 
            重命名(如果新文件名与已有文件重名,将覆盖已有文件) 
            </summary> 
            <param name="strOldFileName">旧文件名</param> 
            <param name="strNewFileName">新文件名</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.Get(System.String,System.String)">
            <summary> 
            下载一批文件 
            </summary> 
            <param name="strFileNameMask">文件名的匹配字符串</param> 
            <param name="strFolder">本地目录(不得以\结束)</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.Get(System.String,System.String,System.String)">
            <summary> 
            下载一个文件 
            </summary> 
            <param name="strRemoteFileName">要下载的文件名</param> 
            <param name="strFolder">本地目录(不得以\结束)</param> 
            <param name="strLocalFileName">保存在本地时的文件名</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.Put(System.String,System.String)">
            <summary> 
            上传一批文件 
            </summary> 
            <param name="strFolder">本地目录(不得以\结束)</param> 
            <param name="strFileNameMask">文件名匹配字符(可以包含*和?)</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.Put(System.String)">
            <summary> 
            上传一个文件 
            </summary> 
            <param name="strFileName">本地文件名</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.MkDir(System.String)">
            <summary> 
            创建目录 
            </summary> 
            <param name="strDirName">目录名</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.RmDir(System.String)">
            <summary> 
            删除目录 
            </summary> 
            <param name="strDirName">目录名</param> 
        </member>
        <member name="M:PL.Base.FtpHelper.ChDir(System.String)">
            <summary> 
            改变目录 
            </summary> 
            <param name="strDirName">新的工作目录名</param> 
        </member>
        <member name="F:PL.Base.FtpHelper.strMsg">
            <summary> 
            服务器返回的应答信息(包含应答码) 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.strReply">
            <summary> 
            服务器返回的应答信息(包含应答码) 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.iReplyCode">
            <summary> 
            服务器返回的应答码 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.socketControl">
            <summary> 
            进行控制连接的socket 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.trType">
            <summary> 
            传输模式 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.BLOCK_SIZE">
            <summary> 
            接收和发送数据的缓冲区 
            </summary> 
        </member>
        <member name="F:PL.Base.FtpHelper.ASCII">
            <summary> 
            编码方式 
            </summary> 
        </member>
        <member name="M:PL.Base.FtpHelper.ReadReply">
            <summary> 
            将一行应答字符串记录在strReply和strMsg 
            应答码记录在iReplyCode 
            </summary> 
        </member>
        <member name="M:PL.Base.FtpHelper.CreateDataSocket">
            <summary> 
            建立进行数据连接的socket 
            </summary> 
            <returns>数据连接socket</returns> 
        </member>
        <member name="M:PL.Base.FtpHelper.CloseSocketConnect">
            <summary> 
            关闭socket连接(用于登录以前) 
            </summary> 
        </member>
        <member name="M:PL.Base.FtpHelper.ReadLine">
            <summary> 
            读取Socket返回的所有字符串 
            </summary> 
            <returns>包含应答码的字符串行</returns> 
        </member>
        <member name="M:PL.Base.FtpHelper.SendCommand(System.String)">
            <summary> 
            发送命令并获取应答码和最后一行应答字符串 
            </summary> 
            <param name="strCommand">命令</param> 
        </member>
        <member name="M:PL.Base.ImageHelper.ImageToString(System.String)">
            <summary>
            读取指定路径下的图片，返回Base64编码字符串
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.MailHelper">
            <summary>
            发送邮件线程
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.SmtpServer">
            <summary>
            邮件服务器
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.User">
            <summary>
            发送邮件账号
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.Password">
            <summary>
            发送邮件密码
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.From">
            <summary>
            发送邮件者 
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.FromName">
            <summary>
            发送邮件者名
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.To">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.Cc">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.Bcc">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.Subject">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.Port">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.MailPriority">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.Attachments">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.Body">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.MailHelper.IsBodyHtml">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.MailHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.MailHelper.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.MailHelper.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="smtpServer">邮件服务器</param>
            <param name="user">账号</param>
            <param name="password">密码</param>
            <param name="port">端口</param>
        </member>
        <member name="M:PL.Base.MailHelper.SendMail">
            <summary>
            发送邮件
            </summary>
        </member>
        <member name="M:PL.Base.MailHelper.SendMail(System.Boolean)">
            <summary>
            发送邮件
            </summary>
        </member>
        <member name="M:PL.Base.MailHelper.SendMailWithThread">
            <summary>
            线程发送邮件
            </summary>
        </member>
        <member name="M:PL.Base.MailHelper.SetMailAttachments(System.Net.Mail.MailMessage)">
            <summary>
            附件
            </summary>
            <param name="mailMessage"></param>
        </member>
        <member name="M:PL.Base.MailHelper.SetMailTo(System.Net.Mail.MailMessage)">
            <summary>
            设置接收人
            </summary>
            <param name="mailMessage"></param>
        </member>
        <member name="M:PL.Base.MailHelper.SetMailCc(System.Net.Mail.MailMessage)">
            <summary>
            
            </summary>
            <param name="mailMessage"></param>
        </member>
        <member name="M:PL.Base.MailHelper.SetMailBcc(System.Net.Mail.MailMessage)">
            <summary>
            
            </summary>
            <param name="mailMessage"></param>
        </member>
        <member name="T:PL.Base.Deleted.Security">
            <summary>
            安全
            </summary>
        </member>
        <member name="M:PL.Base.Deleted.Security.MD5Encrypt(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="pToEncrypt"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Deleted.Security.MD5Decrypt(System.String)">
            <summary>
            
            </summary>
            <param name="pToDecrypt"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.SQLConvert">
            <summary>
            SQL转换
            </summary>
        </member>
        <member name="M:PL.Base.SQLConvert.Convert(System.String,PL.Base.EciRequest)">
            <summary>
            内容转换
            </summary>
            <param name="input"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SQLConvert.BasicConvert(System.String,PL.Base.EciRequest)">
            <summary>
            通用转换
            </summary>
            <param name="input"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SQLConvert.BasicConvertByContext(System.String,PL.Base.BLLContext)">
            <summary>
            通用转换
            </summary>
            <param name="input"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Zip">
            <summary>
            压缩
            </summary>
        </member>
        <member name="M:PL.Base.Zip.CompressText(System.String)">
            <summary>
            压缩
            </summary>
            <param name="strSource"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Zip.DeCompressText(System.String)">
            <summary>
            解压缩
            </summary>
            <param name="strSource"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Zip.UnZip(System.String,System.String,System.String)">
            <summary>   
            解压功能(解压压缩文件到指定目录)   
            </summary>   
            <param name="fileToUnZip">待解压的文件</param>   
            <param name="zipedFolder">指定解压目标目录</param>   
            <param name="password">密码</param>   
            <returns>解压结果</returns>   
        </member>
        <member name="M:PL.Base.Zip.UnZip(System.String,System.String)">
            <summary>   
            解压功能(解压压缩文件到指定目录)   
            </summary>   
            <param name="fileToUnZip">待解压的文件</param>   
            <param name="zipedFolder">指定解压目标目录</param>   
            <returns>解压结果</returns>   
        </member>
        <member name="M:PL.Base.Zip.ZipFolder(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String)">
            <summary>
            
            </summary>
            <param name="FolderToZip"></param>
            <param name="s"></param>
            <param name="ParentFolderName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Zip.ZipFolder(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="folder"></param>
            <param name="zipedFile"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Zip.ZipFolderNotIncludeParent(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="folder"></param>
            <param name="zipedFile"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Zip.ZipFolder(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            
            </summary>
            <param name="listFolder"></param>
            <param name="zipedFile"></param>
            <returns></returns>
        </member>
        <member name="F:PL.Base.EntityCtrl.ListNumberColumn">
            <summary>
            数字字段
            </summary>
        </member>
        <member name="F:PL.Base.EntityCtrl.ListDateColumn">
            <summary>
            日期字段
            </summary>
        </member>
        <member name="M:PL.Base.EntityCtrl.Number(System.String)">
            <summary>
            增加数字类型字段
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:PL.Base.EntityCtrl.Date(System.String)">
            <summary>
            增加日期类型字段
            </summary>
            <param name="column"></param>
        </member>
        <member name="T:PL.Base.CommonSQL">
            <summary>
            基本查询
            </summary>
        </member>
        <member name="M:PL.Base.CommonSQL.BuildCommonSQL(PL.Base.EntityBase)">
            <summary>
            创建基本查询条件
            </summary>
            <param name="queryEntity"></param>
            <returns></returns>
        </member>
        <member name="F:PL.Base.OperationType.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.Like">
            <summary>
            模糊
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.StartWith">
            <summary>
            以XX开头
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.EndWith">
            <summary>
            以XX结尾
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.EndWithH">
            <summary>
            以XX结尾
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.EndWithMM">
            <summary>
            以XX结尾
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.EndWithM">
            <summary>
            以XX结尾
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.EndWithS">
            <summary>
            以XX结尾
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.GreaterThanOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.LessThanOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.In">
            <summary>
            集合(精确匹配)
            </summary>
        </member>
        <member name="F:PL.Base.OperationType.IsNull">
            <summary>
            为空
            </summary>
        </member>
        <member name="T:PL.Base.SearchHelper">
            <summary>
            查询辅助类
            </summary>
        </member>
        <member name="M:PL.Base.SearchHelper.Search(System.String,PL.Base.Paging)">
            <summary>
            分页查询
            </summary>
            <param name="sql"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SearchHelper.SearchByConnectionString(System.String,System.String,PL.Base.Paging)">
            <summary>
            分页查询
            </summary>
            <param name="connectionString"></param>
            <param name="sql"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SearchHelper.Search(System.String,System.String,PL.Base.Paging)">
            <summary>
            分页查询
            </summary>
            <param name="dbName"></param>
            <param name="sql"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SearchHelper.Search(ECI.BaseFramework.DBConnection.DB,System.String,PL.Base.Paging)">
            <summary>
            分页查询
            </summary>
            <param name="db"></param>
            <param name="sql"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SearchHelper.GetDataTable(System.String,System.String)">
            <summary>
            数据查询
            </summary>
            <param name="dbName"></param>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SearchHelper.BuildCommonSQL(PL.Base.EntityBase)">
            <summary>
            构建通用简单查询条件
            </summary>
            <param name="queryEntity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SearchHelper.ConvertToContext(PL.Base.EciContext,PL.Base.SearchResult)">
            <summary>
            查询结果转成上下文返回
            </summary>
            <param name="context"></param>
            <param name="result"></param>
        </member>
        <member name="T:PL.Base.SearchResult">
            <summary>
            查询结果
            </summary>
        </member>
        <member name="F:PL.Base.SearchResult.DataTable">
            <summary>
            查询数据结果
            </summary>
        </member>
        <member name="F:PL.Base.SearchResult.Paging">
            <summary>
            分页信息
            </summary>
        </member>
        <member name="F:PL.Base.SearchResult.SummaryInfo">
            <summary>
            汇总信息
            </summary>
        </member>
        <member name="F:PL.Base.SearchResult.Entity">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:PL.Base.SearchResult.ExportTask">
            <summary>
            导出任务
            </summary>
        </member>
        <member name="M:PL.Base.SearchResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PL.Base.SqlDataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:PL.Base.SqlDataType.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:PL.Base.SqlDataType.Number">
            <summary>
            数字
            </summary>
        </member>
        <member name="F:PL.Base.SqlDataType.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:PL.Base.SqlDataType.Check">
            <summary>
            单选框
            </summary>
        </member>
        <member name="F:PL.Base.SqlDataType.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:PL.Base.DBHelper">
            <summary>
            数据访问组件
            </summary>
        </member>
        <member name="M:PL.Base.DBHelper.Search(PL.Base.SearchOption)">
            <summary>
            分页查询
            </summary>
            <param name="option">分页查询参数</param>
        </member>
        <member name="M:PL.Base.DBHelper.GetPageDataTable(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            分页查询
            </summary>
            <param name="sql"></param>
            <param name="pageIndex">第一页是1，不是0</param>
            <param name="pageSize"></param>
            <param name="allRowCount"></param>
            <param name="allPageCount"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetPageDataTable(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="countSql"></param>
            <param name="outSql"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="allRowCount"></param>
            <param name="allPageCount"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetDB(System.String)">
            <summary>
            获取数据库
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetDBByConnectionString(System.String)">
            <summary>
            获取数据库 
            </summary>
            <param name="ConnectionString">Oracle:开头或者SqlServer:</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetDB(System.String,PL.Base.DBType)">
            <summary>
            获取数据库
            </summary>
            <param name="ConnectionString"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteProcedure(System.String,System.Object[])">
            <summary>
            执行存储过程
            </summary>
            <param name="strProcedureName">存储过程名称</param>
            <param name="oParameters">存储过程参数</param>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteProcedure(System.String,System.Object,System.Object[])">
            <summary>
            执行存储过程
            </summary>
            <param name="strProcedureName">存储过程名称</param>
            <param name="ts">事务</param>
            <param name="oParameters">存储过程参数</param>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteProcedure(System.String,System.Object,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行存储过程
            </summary>
            <param name="strProcedureName">存储过程名称</param>
            <param name="ts">事务</param>
            <param name="oParameters">存储过程参数</param>
            <param name="options"></param>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteProcedure(System.String,System.Object[],System.String)">
            <summary>
            执行存储过程,返回输出参数值
            </summary>
            <param name="strProcedureName">存储过程名称</param>
            <param name="oParameters">存储过程参数</param>
            <param name="outputParamName">输出参数</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteProcedure(System.String,System.Object,System.Object[],System.String)">
            <summary>
            执行存储过程,返回输出参数值
            </summary>
            <param name="strProcedureName">存储过程名称</param>
            <param name="ts">事务</param>
            <param name="oParameters">存储过程参数</param>
            <param name="outputParamName">输出参数</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.CreateParamEx(System.String,System.String,System.String,System.Int32,PL.Base.DBParamType)">
            <summary>
            创建参数
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="type">类型 I:输入参数,E 输出参数</param>
            <param name="length">长度</param>
             <param name="dataType">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.CreateParam(System.String,System.String,System.String)">
            <summary>
            创建参数
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="type">类型 I:输入参数,E 输出参数</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.CreateParam(System.String,System.String,System.String,System.Int32)">
            <summary>
            创建参数
            </summary>
            <param name="name">参数名</param>
            <param name="value">参数值</param>
            <param name="type">类型 I:输入参数,E 输出参数</param>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetParameterValue(System.Object)">
            <summary>
            获取参数值
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.Commit(System.Object)">
            <summary>
            提交事务
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:PL.Base.DBHelper.RollBack(System.Object)">
            <summary>
            回滚事务
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:PL.Base.DBHelper.Exists(System.String)">
            <summary>
            判断数据是否存在
            </summary>
            <param name="sql">查询语句</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.Exists(System.String,System.Object)">
            <summary>
            判断数据是否存在
            </summary>
            <param name="sql">查询语句</param>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.CheckRepeat(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="compareKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.CheckRepeatWithTs(System.String,System.String,System.Object)">
            <summary>
            判断数据重复
            </summary>
            <param name="sql"></param>
            <param name="compareKey"></param>
            <param name="ts"></param>
            <returns>如果重复返回 True 否则返回 False</returns>
        </member>
        <member name="M:PL.Base.DBHelper.CheckRepeat(System.String,System.String,System.String)">
             <summary>
            判断数据重复, 如果重复则抛出异常Message,否则返回False
             </summary>
             <param name="sql"></param>
             <param name="compareKey"></param>
             <param name="message"></param>
             <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.CheckRepeat(System.String,System.String,System.String,System.Object)">
             <summary>
            判断数据重复, 如果重复则抛出异常Message,否则返回False
             </summary>
             <param name="sql"></param>
             <param name="compareKey"></param>
             <param name="message"></param>
             <param name="ts"></param>
             <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteNoneQuery(System.String)">
            <summary>
            /执行
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteNoneQuery(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="ts"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteNoneQuery(System.String,System.Object)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteNoneQuery(System.String,System.Object[])">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteNoneQuery(System.String,System.Object[],System.Object)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="param"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteNoneQuery(System.Collections.Generic.List{System.String})">
            <summary>
            执行
            </summary>
            <param name="listSql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.ExecuteNoneQuery(System.Collections.Generic.List{System.String},System.Object)">
            <summary>
            执行
            </summary>
            <param name="listSql"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetDataTable(System.String)">
            <summary>
            查询
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetDataTableEx(System.String,PL.Base.DBExecuteOption)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetDataTable(System.String,System.String)">
            <summary>
            查询
            </summary>
            <param name="sql"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetDataTable(System.String,System.Object)">
            <summary>
            查询
            </summary>
            <param name="sql"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetField(System.String)">
            <summary>
            查询第一行第一列值，如果没有查询到数据则会报异常
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetField(System.String,System.Object)">
            <summary>
            查询第一行第一列值，如果没有查询到数据则会报异常
            </summary>
            <param name="sql"></param>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.TryGetField(System.String)">
            <summary>
            尝试获取数据
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.TryGetField(System.String,System.Object)">
            <summary>
            尝试获取数据
            </summary>
            <param name="sql"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetList(System.String)">
            <summary>
            查询数据转成List
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetList(System.String,System.Object)">
            <summary>
            查询数据转成List
            </summary>
            <param name="sql"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetCount(System.String)">
            <summary>
            获取记录行数
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.GetCount(System.String,System.Object)">
            <summary>
            获取记录行数
            </summary>
            <param name="sql"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="P:PL.Base.DBHelper.IsOracle">
            <summary>
            Oracle数据库
            </summary>
        </member>
        <member name="P:PL.Base.DBHelper.IsSqlServer">
            <summary>
            SqlServer数据库
            </summary>
        </member>
        <member name="M:PL.Base.DBHelper.CreateClobParam(System.String,System.String)">
            <summary>
            创建Oracle CLOB 参数
            </summary>
            <param name="paramName"></param>
            <param name="paramValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBHelper.Reset">
            <summary>
            重置数据库,可能由于修改了数据库链接
            </summary>
        </member>
        <member name="T:PL.Base.DBManagement">
            <summary>
            数据连接管理
            </summary>
        </member>
        <member name="M:PL.Base.DBManagement.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="productTag"></param>
        </member>
        <member name="M:PL.Base.DBManagement.GetDatabaseByProductTag(System.String)">
            <summary>
            获取数据库对象
            </summary>
            <param name="productTag"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBManagement.GetDatabaseByConnectionString(System.String)">
            <summary>
            获取数据库对象
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBManagement.GetDatabaseByConnectionString(System.String,System.String)">
            <summary>
            获取数据库对象
            </summary>
            <param name="connectionString"></param>
            <param name="connectionType"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBManagement.GetDatabaseByConnectionString(System.String,ECI.BaseFramework.DBConnection.ConnectionType)">
            <summary>
            创建数据库链接
            </summary>
            <param name="connectionString"></param>
            <param name="connType"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBManagement.CreateConnType(System.String)">
            <summary>
            创建数据库链接类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBManagement.GetDB(System.String)">
            <summary>
            获取数据库
            </summary>
            <param name="productTag"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBManagement.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="T:PL.Base.DBParamHelper">
            <summary>
            参数辅助类
            </summary>
        </member>
        <member name="F:PL.Base.DBParamHelper.ParamList">
            <summary>
            参数List
            </summary>
        </member>
        <member name="M:PL.Base.DBParamHelper.CreateInputParam(System.String,System.String)">
            <summary>
            创建输入参数
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.DBParamHelper.CreateOutputParam(System.String)">
            <summary>
            创建输出参数
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:PL.Base.DBParamHelper.ToArray">
            <summary>
            ToArray
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DBParamHelper.GetReturnValue(System.String)">
            <summary>
            获取返回值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EciTransaction">
            <summary>
            事务控制器
            </summary>
        </member>
        <member name="F:PL.Base.EciTransaction.ts">
            <summary>
            事务
            </summary>
        </member>
        <member name="P:PL.Base.EciTransaction.IsStartHere">
            <summary>
            事务起点
            </summary>
        </member>
        <member name="M:PL.Base.EciTransaction.#ctor(System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:PL.Base.EciTransaction.Commit">
            <summary>
            尝试提交事务，如果事务是这里创建的则提交
            </summary>
        </member>
        <member name="M:PL.Base.EciTransaction.Rollback">
            <summary>
            尝试回滚事务，如果事务是这里创建的则回滚
            </summary>
        </member>
        <member name="T:PL.Base.NoHelper">
            <summary>
            处理系统所有编号的自动生成
            </summary>
        </member>
        <member name="M:PL.Base.NoHelper.GetNo(System.String,System.Object)">
            <summary>
            获取系统编号，注意：Type参数不可以为Null
            </summary>
            <param name="type">类型,不可以为Null</param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NoHelper.GetNo(System.String,System.String,System.Int32,System.Object)">
            <summary>
            获取系统编号
            </summary>
            <param name="type"></param>
            <param name="startNo"></param>
            <param name="length"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.NoHelper.GetNo(System.String,System.String,System.Int32,System.String,System.String,System.Object)">
            <summary>
            创建编号
            </summary>
            <param name="type">类型</param>
            <param name="startNo">起始编号</param>
            <param name="length">流水长度</param>
            <param name="typeDesc">编号说明</param>
            <param name="realStartNo">真实起始编号</param>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.SearchOption">
            <summary>
            分页查询参数
            </summary>
        </member>
        <member name="P:PL.Base.SearchOption.PageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:PL.Base.SearchOption.PageSize">
            <summary>
            每页显示记录条数
            </summary>
        </member>
        <member name="P:PL.Base.SearchOption.Sql">
            <summary>
            查询语句
            </summary>
        </member>
        <member name="P:PL.Base.SearchOption.SqlCount">
            <summary>
            分页语句
            </summary>
        </member>
        <member name="P:PL.Base.SearchOption.RecordCount">
            <summary>
            总记录数（输出参数）
            </summary>
        </member>
        <member name="P:PL.Base.SearchOption.PageCount">
            <summary>
            总页数(输出参数)
            </summary>
        </member>
        <member name="P:PL.Base.SearchOption.DataTable">
            <summary>
            数据表
            </summary>
        </member>
        <member name="T:PL.Base.TDAIClient">
            <summary>
            TDAIClient
            </summary>
        </member>
        <member name="F:PL.Base.TDAIClient.businessDB">
            <summary>
            业务数据库
            </summary>
        </member>
        <member name="M:PL.Base.TDAIClient.Reset">
            <summary>
            重置数据库,可能由于修改了数据库链接
            </summary>
        </member>
        <member name="P:PL.Base.TDAIClient.BusinessDB">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.Contact(System.String)">
            <summary>
            在原来语句上再拼接上一段自定义的Sql语句
            </summary>
            <param name="sql">要拼接的Sql语句</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.Begin">
             <summary>
            在SQL后面增加(
             </summary>
             <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.End">
             <summary>
            在SQL后面增加）
             </summary>
             <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.And(System.String)">
            <summary>
            增加 AND 注意和 AndOr的差别 
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.AndBegin(System.String)">
            <summary>
            增加 AND (
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.Or(System.String)">
            <summary>
            增加 Or  注意和OrBegin的差别
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.OrBegin(System.String)">
            <summary>
             增加 Or (
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.ToString">
            <summary>
            转成SQL语句
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.GetDataTable">
            <summary>
            转成DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilder.GetDataTable(System.Object)">
            <summary>
            转成DataTable
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilderItem.Contains(System.String)">
            <summary>
            包含
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilderItem.StartWith(System.String)">
            <summary>
            以查询内容开始   对应SQL语句  字段 LIKE 'XX%'
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciSqlBuilderItem.EndWith(System.String)">
            <summary>
            以查询内容结束  对应SQL语句  字段 LIKE '%XX'
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.EntityBase">
            <summary>
            实体基类
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.begin">
            <summary>
            开始开关开启，只有开启开关，后面赋值的字段，才会被作为新增或修改的字段
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.DBTag">
            <summary>
            数据库
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.Ctrl">
            <summary>
            实体控制类
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.ListNVarchar">
            <summary>
            强制转成Unicode编码格式，防止出现特殊字符的乱码
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.CompareExcludeColumns">
            <summary>
            不要参与比对的字段
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.NotCompare(System.String)">
            <summary>
            设置不参与比对字段
            </summary>
            <param name="columns"></param>
        </member>
        <member name="F:PL.Base.EntityBase.JsonKeyIsLower">
            <summary>
            输出Json时 key 全部转成小写字母
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.keepKeyUpper">
            <summary>
            Key转成大写
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.Table">
            <summary>
            物理表信息
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.Columns">
            <summary>
            列信息
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.Children">
            <summary>
            子实体集合
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.ChildrenTag">
            <summary>
            子集合 属性标签 ，用于序列化成 JSON对象使用 默认 children
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.Attributes">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.ListAddColumn">
            <summary>
            增加的数据列
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.#ctor(PL.Base.EntityBase)">
            <summary>
            通过实体对象构造
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PL.Base.EntityBase.Begin">
            <summary>
            开始收集操作字段
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.End">
            <summary>
            结束收集操作字段
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.EffectFields">
            <summary>
            操作字段
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.EffectDataFields">
            <summary>
            操作字典中存在的字段
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.IWantEffectAllFields">
            <summary>
            注意：操作表中的所有字段
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.AddEffectField(System.String)">
            <summary>
            添加操作字段
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:PL.Base.EntityBase.RemoveEffectField(System.String)">
            <summary>
            移除要修改的字段
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:PL.Base.EntityBase.NotSave(System.String)">
            <summary>
            设置不要保存的数据项(注意代码顺序)
            </summary>
            <param name="notSaveField"></param>
        </member>
        <member name="P:PL.Base.EntityBase.KeyField">
            <summary>
            主键字段名
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.ToJson">
            <summary>
            转化成Json字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.ToJson(System.Boolean)">
            <summary>
            转化成Json字符串
            </summary>
            <param name="keyLower"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.EntityPropertyChanged(System.String)">
            <summary>
            记录属性变化
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="F:PL.Base.EntityBase.Data">
            <summary>
            实体数据存储
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.Item(System.String)">
            <summary>
            返回文本，注意不会返回Null，如果找不到则返回Empty
            </summary>
            <param name="key">不区分大小写</param>
            <returns>返回文本，注意不会返回Null，如果找不到则返回Empty</returns>
        </member>
        <member name="P:PL.Base.EntityBase.Item(System.String,System.Boolean)">
            <summary>
            返回文本，注意不会返回Null，如果找不到则返回Empty
            </summary>
            <param name="key">不区分大小写</param>
            <param name="IsDateEnd">必须为True</param>
            <returns></returns>
        </member>
        <member name="F:PL.Base.EntityBase.DataAccess">
            <summary>
            数据访问
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.TextAccess">
            <summary>
            文本访问
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.DoubleAccess">
            <summary>
            数值访问
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.DecimalAssess">
            <summary>
            数值访问
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.BooleanAccess">
            <summary>
            布尔值访问
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.DateAccess">
            <summary>
            日期访问
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.ToListEntity(System.Data.DataTable)">
            <summary>
            将DataTable数据转成实体类列表
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="F:PL.Base.EntityBase.Builder">
            <summary>
            通过Json构建Entity
            </summary>
        </member>
        <member name="F:PL.Base.EntityBase.JsonBuilder">
            <summary>
            构建Json数组
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.SQLSelect">
            <summary>
            查询语句
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.SQLInsert">
            <summary>
            新增语句
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.SQLUpdate">
            <summary>
            更新语句
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.SQLDelete">
            <summary>
            删除语句
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.Update">
            <summary>
            更新
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.Update(System.Object)">
            <summary>
            更新
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.Insert">
            <summary>
            新增
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.Insert(System.Object)">
            <summary>
            新增
            </summary>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.Delete">
            <summary>
            删除
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.Delete(System.Object)">
            <summary>
            删除
            </summary>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="P:PL.Base.EntityBase.QueryExpression">
            <summary>
            查询表达式
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.ConditionExpression">
            <summary>
            注意 前面不需要加 AND
            </summary>
        </member>
        <member name="P:PL.Base.EntityBase.RowNum">
            <summary>
            显示序号
            </summary>
        </member>
        <member name="M:PL.Base.EntityBase.GetColumn(System.String)">
            <summary>
            根据列名获取列对象（不区分大小写）
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.TryGetColumn(System.String)">
            <summary>
            根据列名获取列对象（不区分大小写）
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumn(System.String)">
            <summary>
            增加列(不区分大小写)
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumnNumber(System.String)">
            <summary>
            增加数值列
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumnDate(System.String)">
            <summary>
            增加日期列
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumnCLOB(System.String)">
            <summary>
            增加CLOB列
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumn(System.String,System.String)">
            <summary>
            增加列，同时赋值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumnNumber(System.String,System.String)">
            <summary>
             增加数值列，同时赋值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumnNumber(System.String,System.Double)">
            <summary>
            增加数值列，同时赋值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumnDate(System.String,System.String)">
            <summary>
            增加日期列，同时赋值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddColumnDate(System.String,System.DateTime)">
            <summary>
            增加日期列，同时赋值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:PL.Base.EntityBase.GetTableColumnType(System.String)">
            <summary>
            获取列
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityBase.CheckDataWhetherMatchType(System.String,System.String,System.Boolean)">
            <summary>
            检查数据是否符合数据类型
            </summary>
            <param name="alias"></param>
            <param name="columnName"></param>
            <param name="mustExists"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddOperInfo(PL.Base.BLLContext)">
            <summary>
            保存标准（修改人、修改时间）
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.EntityBase.AddOperInfo(PL.Base.BLLContext,System.Boolean)">
            <summary>
            保存标准操作时间、操作人
            </summary>
            <param name="isAdd"></param>
            <param name="context"></param>
        </member>
        <member name="M:PL.Base.EntityBase.GetSQL">
            <summary>
            获取查询语句
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.TextAccess">
            <summary>
            文本访问
            </summary>
        </member>
        <member name="M:PL.Base.TextAccess.#ctor(PL.Base.EntityBase)">
            <summary>
            构造函数
            </summary>
            <param name="entityBase"></param>
        </member>
        <member name="P:PL.Base.TextAccess.Item(System.String)">
            <summary>
            文本访问,返回文本，注意不会返回Null，如果为Null则返回string.Empty
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DoubleAssess">
            <summary>
            数值访问
            </summary>
        </member>
        <member name="M:PL.Base.DoubleAssess.#ctor(PL.Base.EntityBase)">
            <summary>
            构造函数
            </summary>
            <param name="entityBase"></param>
        </member>
        <member name="P:PL.Base.DoubleAssess.Item(System.String)">
            <summary>
            数值访问,返回数值，注意：如果为空返回Null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DecimalAssess">
            <summary>
            数值访问
            </summary>
        </member>
        <member name="M:PL.Base.DecimalAssess.#ctor(PL.Base.EntityBase)">
            <summary>
            构造函数
            </summary>
            <param name="entityBase"></param>
        </member>
        <member name="P:PL.Base.DecimalAssess.Item(System.String)">
            <summary>
            数值访问,返回数值，注意：如果为空返回Null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.BooleanAccess">
            <summary>
            布尔值访问
            </summary>
        </member>
        <member name="M:PL.Base.BooleanAccess.#ctor(PL.Base.EntityBase)">
            <summary>
            构造函数
            </summary>
            <param name="entityBase"></param>
        </member>
        <member name="P:PL.Base.BooleanAccess.Item(System.String)">
            <summary>
            布尔值访问,返回布尔值，注意：如果为空返回Null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DateAsscess">
            <summary>
            日期访问
            </summary>
        </member>
        <member name="M:PL.Base.DateAsscess.#ctor(PL.Base.EntityBase)">
            <summary>
            构造函数
            </summary>
            <param name="entityBase"></param>
        </member>
        <member name="P:PL.Base.DateAsscess.Item(System.String)">
            <summary>
            日期访问,返回日期，注意：如果为空返回Null
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityExecute`2.Execute(PL.Base.OQL{`0,`1})">
            <summary>
            执行（可以执行三种命令：增、删、改）
            </summary>
            <param name="currentOQL"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityExecute`2.Insert">
            <summary>
            新增
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityExecute`2.Delete">
            <summary>
            删除
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityExecute`2.Update">
            <summary>
            修改
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EQL`2.Execute">
            <summary>
            执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EQL`2.Execute(System.Object)">
            <summary>
            执行
            </summary>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EQL`2.From(System.String)">
            <summary>
            设置查询表名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EQL`2.SetDB(System.String)">
            <summary>
            设置查询表名
            </summary>
            <param name="dbTag">表名</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EQL`2.Where(System.Action{`0})">
            <summary>
            查询条件
            </summary>
            <param name="conditionInstance"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EQL`2.Where(System.String)">
            <summary>
            设置条件
            </summary>
            <param name="conditionExpression">条件表达式，注意：前面不需要加连接符</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.Where(System.Action{`0})">
            <summary>
            查询条件
            </summary>
            <param name="conditionInstance"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.Where(System.String)">
            <summary>
            设置查询条件
            </summary>
            <param name="conditionExpression">条件表达式，注意：前面不需要加连接符</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.From(System.String)">
            <summary>
            设置查询表名
            </summary>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.SetDB(System.String)">
            <summary>
            设置查询表名
            </summary>
            <param name="dbTag">表名</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.Message(System.String)">
            <summary>
            错误提示信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.Single">
            <summary>
            获取实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.SingleOrDefault">
            <summary>
            获取实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.Single(System.Object)">
            <summary>
            获取实体
            </summary>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.SingleOrDefault(System.Object)">
            <summary>
            获取实体或者Null
            </summary>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.ToList">
            <summary>
            获取实体列表，返回只不会等于Null
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.ToDataTable">
            <summary>
            获取TABLE
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.ToList(System.Object)">
            <summary>
            获取实体列表，返回只不会等于Null
            </summary>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.ToDataTable(System.Object)">
            <summary>
            获取实体列表
            </summary>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.JQL`2.Exists">
            <summary>
            检查数据是否存在
            </summary>
        </member>
        <member name="M:PL.Base.JQL`2.Exists(System.Object)">
            <summary>
            检查数据是否存在
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.QueryExpression">
            <summary>
            查询字段
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.ListQueryField">
            <summary>
            查询字段
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.ConditionExpression">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.ConditionInstance">
            <summary>
            条件实体
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.UpdateInstance">
            <summary>
            操作数据实体
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.OrderBy">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.Transaction">
            <summary>
            事务
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.Message">
            <summary>
            错误信息提示
            </summary>
        </member>
        <member name="P:PL.Base.OQL`2.IgnoreNull">
            <summary>
            查询实体时，没有查询到数据
            </summary>
        </member>
        <member name="F:PL.Base.OQLType.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:PL.Base.OQLType.Insert">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:PL.Base.OQLType.Delete">
             <summary>
            删除
             </summary>
        </member>
        <member name="F:PL.Base.OQLType.Update">
            <summary>
            修改
            </summary>
        </member>
        <member name="T:PL.Base.TDAL`2">
            <summary>
            TDAL
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="F"></typeparam>
        </member>
        <member name="M:PL.Base.TDAL`2.Delete">
            <summary>
            删除
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.TDAL`2.Update(`0)">
            <summary>
            未来会取消此功能
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.TDAL`2.Update(System.Action{`0})">
            <summary>
            未来会取消此功能
            </summary>
            <param name="updateInstance"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.TDAL`2.Select(System.Func{`1,System.Collections.Generic.List{System.String}})">
            <summary>
            查询
            </summary>
            <param name="queryField"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.TDAL`2.Select">
            <summary>
            查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.TDAL`2.Select(System.String)">
            <summary>
            查询
            </summary>
            <param name="queryExpression"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EntityHelper`1.Upgrade(PL.Base.EntityBase)">
            <summary>
            升级，特别注意：内存数据和原始对象地址完全一致，不是深度拷贝
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PO.AddColumnByData">
            <summary>
            根据数据内容初始化列
            </summary>
        </member>
        <member name="M:PL.Base.PO.ExecuteFunction(System.Object)">
            <summary>
            执行函数
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:PL.Base.PO.ExecuteFunction(System.String)">
            <summary>
            执行函数
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:PL.Base.PO.ExecuteFunction(System.Object,System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="ts"></param>
            <param name="output"></param>
        </member>
        <member name="M:PL.Base.PO.ExecuteProcedure">
            <summary>
                   PO po = new PO("PROC_NAME");                                   
                   po["A"] = "A";                                   
                   po["B"] = "B";                                   
                   po.ExecuteProcedure(ts, "C");  C是输出参数 多个逗号分隔 C,D
                   string c = po["C"];
            </summary>
        </member>
        <member name="M:PL.Base.PO.ExecuteProcedure(System.Object)">
            <summary>
            执行存储过程
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:PL.Base.PO.ExecuteProcedure(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:PL.Base.PO.ExecuteProcedure(System.Object,System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="ts"></param>
            <param name="output"></param>
        </member>
        <member name="M:PL.Base.PO.ExecuteProcedureReturnDataTable">
            <summary>
            执行存储过程返回Table
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PO.ExecuteProcedureReturnDataTable(System.String)">
            <summary>
             执行存储过程返回Table
            </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.PO.ExecuteProcedureReturnDataDataset(System.Object,System.String)">
            <summary>
             执行存储过程返回Table
            </summary>
            <param name="ts"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.DataRowExtend">
            <summary>
            数据行扩展
            </summary>
        </member>
        <member name="M:PL.Base.DataRowExtend.Key(System.Data.DataRow)">
            <summary>
            获取行对应的Key值
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataRowExtend.Checked(System.Data.DataRow)">
            <summary>
            判断当前行是否是选中行
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataRowExtend.HasSelect(System.Data.DataRow)">
            <summary>
            判断当前行是否是选中行
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataRowExtend.HasSelect(PL.Base.EntityBase)">
            <summary>
            判断当前实体是否是选中的
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.DataRowExtend.SetChecked(System.Data.DataRow)">
            <summary>
            设置选中
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:PL.Base.DataRowExtend.SetUnChecked(System.Data.DataRow)">
            <summary>
            取消选择
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:PL.Base.ListEntityExtend">
            <summary>
            ListEntity扩展
            </summary>
        </member>
        <member name="M:PL.Base.ListEntityExtend.GetColumnList(System.Collections.Generic.List{PL.Base.EntityBase},System.String)">
            <summary>
            获取指定列的集合
            </summary>
            <param name="listEntity"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.GetFields(System.Collections.Generic.List{PL.Base.EntityBase},System.String,System.Boolean)">
            <summary>
            获取指定列的集合
            </summary>
            <param name="listEntity"></param>
            <param name="columnName"></param>
            <param name="distinct"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.GetFields(System.Collections.Generic.List{PL.Base.EntityBase},System.String)">
            <summary>
            获取指定列的集合
            </summary>
            <param name="listEntity"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.GetRepeatFields(System.Collections.Generic.List{PL.Base.EntityBase},System.String)">
            <summary>
            获取重复的字段
            </summary>
            <param name="listEntity"></param>
            <param name="columnName"></param>
        </member>
        <member name="M:PL.Base.ListEntityExtend.ToJson(System.Collections.Generic.List{PL.Base.EntityBase})">
            <summary>
            实体类集合转成Json
            </summary>
            <param name="listEntity">实体类集合</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.ToDataTable(System.Collections.Generic.List{PL.Base.EntityBase})">
            <summary>
            实体类集合转DataTable
            </summary>
            <param name="listEntity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.ToJson(System.Collections.Generic.List{PL.Base.EntityBase},System.Boolean)">
            <summary>
            实体类集合转成Json
            </summary>
            <param name="listEntity">实体类集合</param>
            <param name="lowerKey">Key是否转成小写</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.ToJson(System.Data.DataTable)">
            <summary>
            数据表转成Json
            </summary>
            <param name="data">数据表</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.ToJson(System.Data.DataTable,System.Boolean)">
            <summary>
            数据表转成Json
            </summary>
            <param name="data">数据表</param>
            <param name="lowerKey">Key是否转成小写</param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.Upgrade``1(System.Collections.Generic.List{PL.Base.EntityBase})">
            <summary>
            抽象实体类列表==>具体实体类列表 如果传入参数为Null，则会报错传入参数listEntity不能为Null
            </summary>
            <typeparam name="T"></typeparam>
            <param name="listEntity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.Upgrade``1(PL.Base.EntityBase)">
            <summary>
            将抽象实体类升级成具体实体类，如果实体类为Null则返回Null
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entityBase"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.Downgrade``1(System.Collections.Generic.List{``0})">
            <summary>
            具体实体类列表==>抽象实体类列表，如果传入参数为Null，则会报错传入参数listEntity不能为Null
            </summary>
            <typeparam name="T"></typeparam>
            <param name="listEntity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.IsNull(PL.Base.EntityBase)">
            <summary>
            判断实体是否为 Null
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ListEntityExtend.IsNull(PL.Base.EntityBase,System.String)">
            <summary>
            判断实体是否为 Null
            </summary>
            <param name="entity"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.QueryHelper.BuildCommonSQL(PL.Base.EntityBase)">
            <summary>
            创建基本查询条件
            </summary>
            <param name="queryEntity"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.QueryHelper.GetSQL``1">
            <summary>
            返回查询语句
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:PL.Base.IAPI">
            <summary>
            IAPI
            </summary>
        </member>
        <member name="M:PL.Base.IAPI.Execute(PL.Base.EciRequest)">
            <summary>
            执行
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.IServiceProxy">
            <summary>
            服务代理
            </summary>
        </member>
        <member name="M:PL.Base.IServiceProxy.Execute(PL.Base.EciRequest)">
            <summary>
            执行
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.AssemblyManage">
            <summary>
            程序集管理
            </summary>
        </member>
        <member name="M:PL.Base.AssemblyManage.Load(System.String)">
            <summary>
            加载
            </summary>
            <param name="assemblyPath"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Message.MessageBLL">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.Message.MessageBLL.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.Message.MessageBLL.Create(System.Collections.Generic.List{PL.Base.Message.MessageInfo})">
            <summary>
            
            </summary>
            <param name="listMessage"></param>
        </member>
        <member name="M:PL.Base.Message.MessageBLL.GetMessageById(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Message.MessageBLL.GetMessage(PL.Base.Message.MessageQueryInfo)">
            <summary>
            
            </summary>
            <param name="queryInfo"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Message.MessageBLL.SearchMessage(PL.Base.EntityBase,PL.Base.Paging)">
            <summary>
            
            </summary>
            <param name="queryEntity"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Message.MessageBLL.IKnow(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:PL.Base.Message.MessageQueryInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.QueryType">
            <summary>
            查询类型
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.Id">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.MsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.MsgContent">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.PlanDate">
            <summary>
            计划发送时间
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.SendType">
            <summary>
            发送类型
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.Receiver">
            <summary>
            接收者
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageQueryInfo.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="T:PL.Base.Message.MessageInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.MsgNo">
            <summary>
            消息唯一码，如果相同数据将会被忽略
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.Id">
            <summary>
            消息ID
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.MsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.MsgContent">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.PlanDate">
            <summary>
            计划发送时间
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.SendType">
            <summary>
            发送类型
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.Receiver">
            <summary>
            接收者
            </summary>
        </member>
        <member name="F:PL.Base.Message.MessageInfo.SystemCode">
            <summary>
            系统代码
            </summary>
        </member>
        <member name="M:PL.Base.ComParam.Get(System.String,System.String)">
            <summary>
            获取参数
            </summary>
            <param name="companyCode"></param>
            <param name="paramKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ComParam.Get(System.String,System.String,System.String)">
            <summary>
            获取实例参数
            </summary>
            <param name="companyCode"></param>
            <param name="paramKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ComParam.Clear">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="T:PL.Base.ComParamDefine">
            <summary>
            企业参数
            </summary>
        </member>
        <member name="P:PL.Base.ComParamDefine.ParamKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:PL.Base.ComParamDefine.UIOption">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.ECIDataHelpReader.Cache">
            <summary>
            配置的缓存
            </summary>
        </member>
        <member name="M:PL.Base.ECIDataHelpReader.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:PL.Base.InstanceParam.Get(System.String)">
            <summary>
            获取当前实例对应的参数配置,如果没有则直接取参数的默认值
            </summary>
            <param name="paramKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciParam.GetInstanceParam(System.String,System.String)">
            <summary>
            获取参数
            </summary>
            <param name="instanceId"></param>
            <param name="paramKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciParam.GetInstanceParam(System.String,System.String,System.String)">
            <summary>
            获取实例参数
            </summary>
            <param name="instanceId"></param>
            <param name="paramKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.EciParam.Clear">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="T:PL.Base.IProgressService">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.IProgressService.Create(System.String,PL.Base.ProgressInfo)">
            <summary>
            创建进度任务
            </summary>
            <param name="taskId"></param>
            <param name="progressInfo"></param>
        </member>
        <member name="M:PL.Base.IProgressService.Update(System.String,PL.Base.ProgressInfo)">
            <summary>
            更新状态
            </summary>
            <param name="taskId"></param>
            <param name="progressInfo"></param>
        </member>
        <member name="M:PL.Base.IProgressService.UpdateDetail(System.String,PL.Base.ProgressDetailInfo)">
            <summary>
            更新明细状态
            </summary>
            <param name="taskId"></param>
            <param name="progressDetailInfo"></param>
        </member>
        <member name="M:PL.Base.IProgressService.Get(System.String)">
            <summary>
            获取状态
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.IProgressService.Remove(System.String)">
            <summary>
            移除任务
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.ProgressAPI">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.ProgressAPI.Service">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Base.ProgressAPI.Create(System.String,PL.Base.ProgressInfo)">
            <summary>
            创建任务
            </summary>
            <param name="taskId"></param>
            <param name="progressInfo"></param>
        </member>
        <member name="M:PL.Base.ProgressAPI.Update(System.String,PL.Base.ProgressInfo)">
            <summary>
            任务状态提交
            </summary>
            <param name="taskId"></param>
            <param name="progressInfo"></param>
        </member>
        <member name="M:PL.Base.ProgressAPI.Error(System.String,System.String)">
            <summary>
            任务异常提交
            </summary>
            <param name="taskId"></param>
            <param name="message"></param>
        </member>
        <member name="M:PL.Base.ProgressAPI.UpdateDetail(System.String,PL.Base.ProgressDetailInfo)">
            <summary>
            
            </summary>
            <param name="taskId"></param>
            <param name="progressDetailInfo"></param>
        </member>
        <member name="M:PL.Base.ProgressAPI.Get(System.String)">
            <summary>
            获取进度
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.ProgressAPI.Remove(System.String)">
            <summary>
            获取进度
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.ProgressDetailInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.ProgressDetailInfo.TaskId">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="F:PL.Base.ProgressDetailInfo.StepCode">
            <summary>
            执行步骤编码
            </summary>
        </member>
        <member name="F:PL.Base.ProgressDetailInfo.StepName">
            <summary>
            执行步骤名称
            </summary>
        </member>
        <member name="F:PL.Base.ProgressDetailInfo.Completed">
            <summary>
            是否完成
            </summary>
        </member>
        <member name="F:PL.Base.ProgressDetailInfo.Seq">
            <summary>
            顺序
            </summary>
        </member>
        <member name="T:PL.Base.ProgressUpdateAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.ProgressUpdateAction.Normal">
            <summary>
            正常状态更新
            </summary>
        </member>
        <member name="F:PL.Base.ProgressUpdateAction.Error">
            <summary>
            异常状态更新
            </summary>
        </member>
        <member name="T:PL.Base.ProgressInfo">
            <summary>
            Type 默认是1   目前总共支持两种类型 代码分别是 1,2
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.TaskId">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.TaskName">
            <summary>
            任务名称
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.TaskNote">
            <summary>
            任务详细描述
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.Type">
            <summary>
            1进度 2明细
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.Percent">
            <summary>
            完成度
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.StartDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.CurrentStepName">
            <summary>
            当前执行步骤名称
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.CreateUser">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.Status">
            <summary>
            状态  1.正常 0.异常
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.UpdateAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:PL.Base.ProgressInfo.ListDetail">
            <summary>
            进度明细
            </summary>
        </member>
        <member name="M:PL.Base.ProgressInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:PL.Base.InstanceHelper`1">
            <summary>
            类创建器
            </summary>
            <typeparam name="T">创建类型</typeparam>
        </member>
        <member name="M:PL.Base.InstanceHelper`1.Create(System.String,System.String)">
            <summary>
            创建实例
            </summary>
            <param name="assemblyName"></param>
            <param name="classFullName"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Security.RSAHelper">
            <summary>
            RSAHelper
            </summary>
        </member>
        <member name="F:PL.Base.Security.RSAHelper.PublicKey">
            <summary>
            PublicKey
            </summary>
        </member>
        <member name="F:PL.Base.Security.RSAHelper.PrivateKey">
            <summary>
            PrivateKey
            </summary>
        </member>
        <member name="M:PL.Base.Security.RSAHelper.CreateKey">
            <summary>
            创建KeyInfo
            </summary>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Security.RSAHelper.Encrypt(System.String,System.String)">
            <summary>
            RSA加密
            </summary>
            <param name="data"></param>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.Security.RSAHelper.Decrypt(System.String,System.String)">
            <summary>
            RSA解密
            </summary>
            <param name="data"></param>
            <param name="privateKey"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.Security.RSAKey">
            <summary>
            RSA
            </summary>
        </member>
        <member name="F:PL.Base.Security.RSAKey.PublicKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="F:PL.Base.Security.RSAKey.PriviceKey">
            <summary>
            私钥
            </summary>
        </member>
        <member name="T:PL.Base.SecurityHelper">
            <summary>
            安全辅助类
            </summary>
        </member>
        <member name="M:PL.Base.SecurityHelper.MD5_32(System.String)">
            <summary>
            获取MD5加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SecurityHelper.EncodeBase64(System.String)">
            <summary>
            执行BASE64编码
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SecurityHelper.DecodeBase64(System.String)">
            <summary>
            执行BASE64解码
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SecurityHelper.EncodeBase64Utf8(System.String)">
            <summary>
            执行BASE64编码
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SecurityHelper.DecodeBase64Utf8(System.String)">
            <summary>
            执行BASE64解码
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.SOAHelper">
            <summary>
            SOAServer
            </summary>
        </member>
        <member name="M:PL.Base.SOAHelper.ResponseToDataSet(PL.Base.EciResponse)">
            <summary>
            将Response结果封装成DataSet返回
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Base.SOAHelper.DataSetToResponse(System.Data.DataSet)">
            <summary>
            数据集转成响应
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Base.QueryThreadResult">
            <summary>
            汇总任务
            </summary>
        </member>
        <member name="F:PL.Base.QueryThreadResult.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="F:PL.Base.QueryThreadResult.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:PL.Base.QueryThreadResult.BeginDate">
            <summary>
            开始执行时间
            </summary>
        </member>
        <member name="F:PL.Base.QueryThreadResult.EndDate">
            <summary>
            结束执行时间
            </summary>
        </member>
        <member name="F:PL.Base.QueryThreadResult.Cost">
            <summary>
            执行耗时
            </summary>
        </member>
        <member name="M:PL.Base.QueryThreadResult.ToJson">
            <summary>
            转成Json
            </summary>
            <returns></returns>
        </member>
        <member name="T:PL.Base.QueryThread">
            <summary>
            汇总任务
            </summary>
        </member>
        <member name="P:PL.Base.QueryThread.Sql">
            <summary>
            查询语句
            </summary>
        </member>
        <member name="P:PL.Base.QueryThread.Condition">
            <summary>
            条件 
            </summary>
        </member>
        <member name="P:PL.Base.QueryThread.QueryEntity">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:PL.Base.QueryThread.ThreadTaskId">
            <summary>
            任务ID
            </summary>
        </member>
        <member name="P:PL.Base.QueryThread.Result">
            <summary>
            结果
            </summary>
        </member>
        <member name="M:PL.Base.QueryThread.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Base.QueryThread.Run(System.Threading.ThreadStart)">
             <summary>
            启动线程
             </summary>
        </member>
        <member name="M:PL.Base.QueryThread.Create">
            <summary>
            创建
            </summary>
        </member>
        <member name="M:PL.Base.QueryThread.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.LOG_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.BIZ_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.BIZ_NO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.SUB_NO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.SUB_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.OPER_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.DATA_DETAIL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.USER_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.TRUE_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.COMPANY_CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG_DETAIL.COMPANY_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_GRID_CONFIG.GRID_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_GRID_CONFIG.HEADER_TEXT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_GRID_CONFIG.WIDTH">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_GRID_CONFIG.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_GRID_CONFIG.CREATE_USER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.ID">
            <summary>
             ID
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.BIZ_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.BIZ_NO">
            <summary>
             涓氬姟缂栧彿
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.SUB_NO">
            <summary>
             瀛愪笟鍔＄紪鍙?
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.SUB_ID">
            <summary>
             瀛愪笟鍔D
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.OPER_NAME">
            <summary>
             鎿嶄綔鍚嶇О
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.CREATE_DATE">
            <summary>
             鎿嶄綔鏃ユ湡
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.DATA_DETAIL">
            <summary>
             璇︾粏鍐呭
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.MEMO">
            <summary>
             澶囨敞
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.USER_NAME">
            <summary>
             鎿嶄綔鐢ㄦ埛璐﹀彿
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.TRUE_NAME">
            <summary>
             鎿嶄綔鐢ㄦ埛濮撳悕
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.COMPANY_CODE">
            <summary>
             鍏徃浠ｇ爜
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.COMPANY_NAME">
            <summary>
             鍏徃鍚嶇О
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_BIZ_LOG.HAS_DETAIL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.GROUP_CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.KEY_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.KEY_VALUE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.STATUS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.UDF1">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.UDF2">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.UDF3">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.UDF4">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.CREATE_USER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.UPDATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.UPDATE_USER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_CODE.ADMIN_LOCK">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.GROUP_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.CATELOG">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.STATUS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.GROUP_CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.CREATE_USER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.UPDATE_USER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.UPDATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_DATA_GROUP.ADMIN_LOCK">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.USER_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.LOGIN_NO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.USER_COMPANY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.LOG_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.URL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.REFER_URL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.EVENT_TARGET">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.EVENT_ARGUMENT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.KEY_NO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.PRODUCT_CLASS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.PARAM">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.SUCCESS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.MESSAGE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.ERROR_CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.ERROR_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.IP">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.OS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.BROWSER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.PAGE_TITLE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.FUNCTION_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.SERVICE_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.EXECUTE_BEGIN">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.EXECUTE_END">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.COST">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.SESSION_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.AJAX_ACTION">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.PRODUCT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_SYS_LOG.SITE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.TABLE_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.MAIN_ALIAS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.CONDITION">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.COLUMN_COUNT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.ADVANCE_CONFIG">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.DEFAULT_CONDITION">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.LOAD_DATA">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.FUNCTION_ADD">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.FUNCTION_DELETE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.FUNCTION_EXCEL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.FUNCTION_EDIT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.DEFAULT_SORT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.JS_FILE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.GRID_SQL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.DEFAULT_PAGE_SIZE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.STYLE_FILE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.FUNCTION_BACK">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.REMARKS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.QUERY_COLUMN_COUNT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.PARAM">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.JS_SCRIPT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.DEFAULT_SELECT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.GRID_LAYOUT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.KEEP_ADD_STATUS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.ADD_SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.FILE_UPLOAD">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.UPDATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.PL_VERSION">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.PL_SAVE_FIXED">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.EDIT_FUNCTION_SAVE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.EDIT_FUNCTION_COPY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.EDIT_FUNCTION_CLOSE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.CREATE_USER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.UPDATE_USER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.DATA_SOURCE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.SHARE_CONFIG">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.EDIT_FUNCTION_ADD">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.FUNCTION_SAVE_BACK">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.ADVANCE_CONFIG_SERVER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE.CAN_CONFIG">
            <summary>
             
            </summary>
        </member>
        <member name="M:PL.Server.Core.Entity.ECI_TABLE.InitDefaultValue">
            <summary>
            初始化默认值
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.MAIN_ALIAS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.PHYSICAL_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.FIELD_LENGTH">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.WIDTH">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.LINK_URL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.SQL_ATTRIBUTE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.TABLE_GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DEFAULT_VALUE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DICTIONARY_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.GRID_SHOW">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EDIT_SHOW">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.QUERY_SHOW">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.PRIMARY_KEY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.NULLABLE_KEY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.UNIQUE_KEY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DICTIONARY_TYPE_CONFIG">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.QUERY_SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EDIT_SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EDIT_LOCK_MODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.SYSTEM_DATA">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.SYSTEM_DATA_TRIGGER">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.COLSPAN">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.SHOW_CONVERT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.PRIMARY_CREATOR">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.COPY_REMOVE_DATA">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.QUERY_ADD_EMPTY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.GROUP_CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EDIT_HIDE_LABEL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.GRID_SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.CSS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.WRAP">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.CONTROL_WIDTH">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.NOT_SAVE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DEFAULT_VALUE_QUERY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.HIDDEN">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DB_FIELD">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DATA_FORMAT_GRID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DATA_SOURCE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.GRID_HEAD_ALIGN">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.GRID_ITEM_ALIGN">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.SHOW_TIP">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.SQL_ATTRIBUTE_EX">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.CONTRACT_TEXT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.TO_DBC">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EDIT_TIP">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.DATA_FORMAT_EDIT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EXPORT_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.AFTER_ELEMENT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EDIT_LABEL_TIP">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.EDIT_NOT_SAVE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.AUTO_UPPER">
            <summary>
             
            </summary>
        </member>
        <member name="M:PL.Server.Core.Entity.ECI_TABLE_ELEMENT.InitDefaultValue">
            <summary>
            初始化默认值
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.CREATE_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.FUNCTION_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.EXTEND_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.GRID_LINK_URL">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.JS_SCRIPT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.SHOW_MODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.CONTROL_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.HOT_KEY">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.WIDTH">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.CSS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.AUTHORITY_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.SHOW_POSITION">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.STATUS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.TABLE_GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.FUNCTION_DATA">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.WCF_SERVICE_DATA">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_FUNCTION.CONTROLLER_ACTION">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.DISPLAY_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.COLUMN_COUNT">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.GROUP_CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.GROUP_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_GROUP.TABLE_GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.TABLE_GUID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.TAB_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.SEQ">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.STATUS">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.CONTROL_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.CONTROL_PATH">
            <summary>
             
            </summary>
        </member>
        <member name="P:PL.Server.Core.Entity.ECI_TABLE_TABITEM.SHOW_MODE">
            <summary>
             
            </summary>
        </member>
        <member name="T:PL.Server.Entity.BaseColumn">
            <summary>
            BaseColumn
            </summary>
        </member>
        <member name="F:PL.Server.Entity.BaseColumn.ListColumn">
            <summary>
            列集合
            </summary>
        </member>
        <member name="T:PL.Server.Entity.EntityBuilder`1">
            <summary>
            实体创建
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToEntity(System.String)">
            <summary>
            将Json数据转成实体
            </summary>
            <param name="jsonData"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToEntity(System.String,`0)">
            <summary>
            将Json字符转成实体
            </summary>
            <param name="jsonData"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToEntity(Newtonsoft.Json.Linq.JObject,`0)">
            <summary>
            将Json对象转成实体
            </summary>
            <param name="json"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToList(System.String)">
            <summary>
            将Json数据转成实体列表
            </summary>
            <param name="jsonData"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToEntityBySql(System.String)">
            <summary>
            从Sql语句转成实体
            </summary>
            <param name="sql">查询语句</param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToEntityBySql(System.String,System.Object)">
            <summary>
            从Sql语句转成实体
            </summary>
            <param name="sql">查询语句</param>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToListBySql(System.String)">
            <summary>
            从Sql语句转成实体列表
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToListBySql(System.String,System.Object)">
            <summary>
            从Sql语句转成实体列表
            </summary>
            <param name="sql">查询语句</param>
            <param name="ts">事务</param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToEntity(System.Data.DataTable)">
            <summary>
            从DataTable转成实体
            </summary>
            <param name="dataTable"></param>
            <returns>如果DataTable没有数据则，返回Null，否则返回数据表的第一行对应的实体</returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToEntity(System.Data.DataRow)">
            <summary>
            从DataRow转成实体
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.EntityBuilder`1.ToList(System.Data.DataTable)">
            <summary>
            从DataTable转成实体列表
            </summary>
            <param name="dataTable"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.Entity.Builder.JsonArrayBuilder`1">
            <summary>
            JSON创建
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:PL.Server.Entity.Builder.JsonArrayBuilder`1.ToJson(System.Collections.Generic.List{`0})">
            <summary>
            将实体类列表转成Json对象,如果参数List为Null,则会报错
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.Builder.JsonArrayBuilder`1.ToJson(System.Collections.Generic.List{`0},System.Boolean)">
            <summary>
            将实体类列表转成Json对象，Json Key全部转成小写,如果参数List为Null,则会报错
            </summary>
            <param name="list"></param>
            <param name="lowerKey"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.Builder.ECIJsonBuilder.ToJson(PL.Base.EntityBase)">
            <summary>
            实体转成JSON字符串
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Entity.Builder.ECIJsonBuilder.ToJson(PL.Base.EntityBase,System.Boolean)">
            <summary>
            实体转成JSON字符串
            </summary>
            <param name="entity">实体</param>
            <param name="lowerKey">KEY是否变成小写，否则都是大写</param>
            <returns></returns>
        </member>
        <member name="F:PL.Server.Entity.Builder.DALMessage.NotSetDeleteKeyField">
            <summary>
            没有设置删除的主键
            </summary>
        </member>
        <member name="F:PL.Server.Entity.Builder.DALMessage.NotSetDeleteKeyFieldValue">
            <summary>
            没有设置删除的主键值
            </summary>
        </member>
        <member name="T:PL.Server.Entity.ColumnInfo">
            <summary>
            列信息
            </summary>
        </member>
        <member name="P:PL.Server.Entity.ColumnInfo.Alias">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:PL.Server.Entity.ColumnInfo.Name">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:PL.Server.Entity.ColumnInfo.Type">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="P:PL.Server.Entity.ColumnInfo.Length">
            <summary>
            数据长度
            </summary>
        </member>
        <member name="P:PL.Server.Entity.ColumnInfo.NotNull">
            <summary>
            不可以为空
            </summary>
        </member>
        <member name="P:PL.Server.Entity.ColumnInfo.Validate">
            <summary>
            
            </summary>
        </member>
        <member name="M:PL.Server.Entity.ColumnInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:PL.Server.Entity.ColumnInfo.#ctor(System.String)">
             <summary>
            构造函数
             </summary>
             <param name="name"></param>
        </member>
        <member name="T:PL.Server.Entity.SQLBuilder.DeleteSQL">
            <summary>
            实体类自动创建删除语句
            </summary>
        </member>
        <member name="M:PL.Server.Entity.SQLBuilder.DeleteSQL.Get(PL.Base.EntityBase)">
            <summary>
            获取删除语句
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.Entity.SQLBuilder.InsertSQL">
            <summary>
            实体类自动创建新增语句
            </summary>
        </member>
        <member name="M:PL.Server.Entity.SQLBuilder.InsertSQL.Get(PL.Base.EntityBase)">
            <summary>
            获取新增语句
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.Entity.SQLBuilder.SelectSQL">
            <summary>
            实体类自动创建查询语句
            </summary>
        </member>
        <member name="M:PL.Server.Entity.SQLBuilder.SelectSQL.Get(PL.Base.EntityBase)">
            <summary>
            获取查询语句
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.Entity.SQLBuilder.UpdateSQL">
            <summary>
            实体类自动创建修改语句
            </summary>
        </member>
        <member name="M:PL.Server.Entity.SQLBuilder.UpdateSQL.Get(PL.Base.EntityBase)">
            <summary>
            获取修改语句
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.Entity.Entity.TableInfo">
            <summary>
            表信息
            </summary>
        </member>
        <member name="P:PL.Server.Entity.Entity.TableInfo.Name">
            <summary>
            表名
            </summary>
        </member>
        <member name="T:PL.Server.Controller.LocalAPI">
            <summary>
            API直接调用
            </summary>
        </member>
        <member name="M:PL.Server.Controller.LocalAPI.Execute(PL.Base.EciRequest)">
            <summary>
            执行
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.Controller.SOAServerSO">
            <summary>
            SOAServerSO
            </summary>
        </member>
        <member name="P:PL.Server.Controller.SOAServerSO.Context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="P:PL.Server.Controller.SOAServerSO.AssemblyName">
            <summary>
            程序集
            </summary>
        </member>
        <member name="P:PL.Server.Controller.SOAServerSO.FullClassName">
            <summary>
            完整类名
            </summary>
        </member>
        <member name="T:PL.Server.Controller.SOAServer">
            <summary>
            SOAServer
            </summary>
        </member>
        <member name="F:PL.Server.Controller.SOAServer.ValidateRequest">
            <summary>
            是否验证Request
            </summary>
        </member>
        <member name="M:PL.Server.Controller.SOAServer.Execute(System.String)">
             <summary>
            执行
             </summary>
             <param name="json"></param>
             <returns></returns>
        </member>
        <member name="M:PL.Server.Controller.SOAServer.ExecuteSilverlight(System.String)">
            <summary>
            执行
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Controller.SOAServer.ExecuteSilverlight(System.String,System.Byte[])">
            <summary>
            Silverlight执行
            </summary>
            <param name="json"></param>
            <param name="byteData"></param>
            <returns></returns>
        </member>
        <member name="M:PL.Server.Controller.SOAServer.Execute(PL.Base.EciRequest)">
            <summary>
            Silverlight执行
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:PL.Server.Controller.SOAUserState">
            <summary>
            SOA用户状态
            </summary>
        </member>
        <member name="M:PL.Server.Controller.SOAUserState.UserStateInit(PL.Base.EciContext)">
            <summary>
            初始化服务端系统数据
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.LogExecuteSql(System.String)">
            <summary>
            记录执行的SQL日志
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.Commit(System.Object)">
             <summary>
            提交事务
             </summary>
             <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.CreateParameter(System.String,System.Object,System.Data.ParameterDirection,System.Int32,PL.Base.DBParamType)">
            <summary>
            创建参数
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="pdType"></param>
            <param name="iSize"></param>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.Execute(System.String,System.Object)">
            <summary>
            事务执行语句
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.ExecuteWithOption(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            事务执行语句
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.Execute(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.ExecuteWithOption(System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.ExecuteProcedure(System.String,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行数据库存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.GetDataReader(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.GetDataSet(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            获取DataSet
            </summary>
            <param name="sql"></param>
            <param name="Alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.GetDataView(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataView
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.GetFieldValue(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取指定列值
            </summary>
            <param name="SQL"></param>
            <param name="FieldName"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.MySQLDB.GetParameterValue(System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.LogExecuteSql(System.String)">
            <summary>
            记录执行的SQL日志
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.Commit(System.Object)">
             <summary>
            提交事务
             </summary>
             <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.RollBack(System.Object)">
            <summary>
            回滚事务
            </summary>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.CreateParameter(System.String,System.Object,System.Data.ParameterDirection,System.Int32,PL.Base.DBParamType)">
            <summary>
            创建参数
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="pdType"></param>
            <param name="iSize"></param>
             <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.Execute(System.String,System.Object)">
            <summary>
            事务执行语句
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.ExecuteWithOption(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            事务执行语句
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.Execute(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.ExecuteWithOption(System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.ExecuteProcedure(System.String,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行数据库存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.GetDataReader(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.GetDataSet(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            获取DataSet
            </summary>
            <param name="sql"></param>
            <param name="Alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.GetDataView(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataView
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="UserTransaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.GetFieldValue(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取指定列值
            </summary>
            <param name="sql"></param>
            <param name="FieldName"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDBManage.GetParameterValue(System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.OraDBManage.Connection">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.OraDBManage.ConnType">
            <summary>
            数据库连接类型
            </summary>
        </member>
        <member name="T:ECI.BaseFramework.DBConnection.DB">
            <summary>
            DB
            </summary>
        </member>
        <member name="F:ECI.BaseFramework.DBConnection.DB.CommandTimeout">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.#ctor(System.String,ECI.BaseFramework.DBConnection.ConnectionType)">
            <summary>
            构造函数
            </summary>
            <param name="Connection"></param>
            <param name="ConnType"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Commit(System.Object)">
            <summary>
            提交
            </summary>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.CreateParameter(System.String,System.Object,System.Data.ParameterDirection,System.Int32)">
            <summary>
            创建参数
            </summary>
            <param name="strName"></param>
            <param name="oValue"></param>
            <param name="dpType"></param>
            <param name="iSize"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.CreateSqlScript(System.Data.DataTable,System.Text.StringBuilder)">
            <summary>
            获取查询语句
            </summary>
            <param name="dtData"></param>
            <param name="stringBuilder"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.Data.DataSet)">
            <summary>
            执行
            </summary>
            <param name="dsData"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.Data.DataTable)">
            <summary>
            执行
            </summary>
            <param name="dtData"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.String)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.ExecuteWithOption(System.String,PL.Base.DBExecuteOption)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.ExecuteWithOption(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
             执行
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.String,System.Object)">
            <summary>
             执行
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.String,System.Boolean)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.ExecuteWithOption(System.String,System.Boolean,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="Transaction"></param>
              <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.String,System.Boolean,System.Object)">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="Transaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.String,System.Data.CommandType,System.Object[])">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.ExecuteWithOption(System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.Execute(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            执行
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.ExecuteProcedure(System.String,System.Object[])">
            <summary>
            执行存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.ExecuteProcedure(System.String,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.ExecuteProcedure(System.String,System.Object,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="ts"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetColumnsString(System.Data.DataTable)">
            <summary>
            获取列
            </summary>
            <param name="dtData"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataReader(System.String)">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataReader(System.String,System.Boolean)">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataReader(System.String,System.Boolean,System.Object)">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataReader(System.String,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataReader(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSetEx(System.String,PL.Base.DBExecuteOption)">
            <summary>
            获取数据集EX
            </summary>
            <param name="sql"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSetEx(System.String,System.String,PL.Base.DBExecuteOption)">
            <summary>
            获取数据集EX
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSetEx(System.String,System.String,System.Boolean,PL.Base.DBExecuteOption)">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="needTransaction"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSetEx(System.String,System.String,System.Boolean,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSetEx(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            获取数据集Ex
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSet(System.String)">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSet(System.String,System.String)">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSet(System.String,System.String,System.Boolean)">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="needTransaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSet(System.String,System.String,System.Boolean,System.Object)">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSet(System.String,System.String,System.Data.CommandType,System.Object[])">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataSet(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取数据集
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataTable(System.String)">
            <summary>
            获取数据表
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataTable(System.String,System.Object)">
            <summary>
            获取数据表
            </summary>
            <param name="sql"></param>
            <param name="ts"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataTable(System.String,System.String)">
            <summary>
            获取数据表
            </summary>
            <param name="sql"></param>
            <param name="strAlias"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataValues(System.Data.DataRow)">
            <summary>
            
            </summary>
            <param name="drData"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataView(System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataView(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataView(System.String,System.Boolean,System.Object)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataView(System.String,System.Data.CommandType,System.Object[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetDataView(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="needTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetFieldValue(System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetFieldValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sql"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetParameterValue(System.Object)">
            <summary>
            获取参数值
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.RollBack(System.Object)">
            <summary>
            回滚
            </summary>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.PageQuery(System.String,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            分页查询
            </summary>
            <param name="sql"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="allRowCount"></param>
            <param name="allPageCount"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.GetCount(System.String)">
            <summary>
            获取总记录数
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.DB.UpdateOracleLongField(System.String,System.String,System.String,System.String)">
            <summary>
            更新长字段
            </summary>
            <param name="strTableName"></param>
            <param name="strFieldName"></param>
            <param name="strValue"></param>
            <param name="strCondition"></param>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.DB.ConnectionString">
            <summary>
            数据库链接字符串
            </summary>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.DB.DBScriptLog">
            <summary>
            启用数据库日志
            </summary>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.DB.IsOracleDB">
            <summary>
            是Oracle数据库
            </summary>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.Commit(System.Object)">
             <summary>
            提交事务
             </summary>
             <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.CreateParameter(System.String,System.Object,System.Data.ParameterDirection,System.Int32,PL.Base.DBParamType)">
            <summary>
            创建参数
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="pdType"></param>
            <param name="iSize"></param>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.Execute(System.String,System.Object)">
            <summary>
            事务执行语句
            </summary>
            <param name="strSql"></param>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.ExecuteWithOption(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            事务执行语句
            </summary>
            <param name="strSql"></param>
            <param name="oDBTransaction"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.Execute(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.ExecuteWithOption(System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.ExecuteProcedure(System.String,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行数据库存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
             <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.GetDataReader(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.GetDataSet(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            获取DataSet
            </summary>
            <param name="SQL"></param>
            <param name="Alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.GetDataView(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataView
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.GetFieldValue(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取指定列值
            </summary>
            <param name="SQL"></param>
            <param name="FieldName"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OdbcDB.GetParameterValue(System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.Commit(System.Object)">
             <summary>
            提交事务
             </summary>
             <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.RollBack(System.Object)">
            <summary>
            回滚事务
            </summary>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.CreateParameter(System.String,System.Object,System.Data.ParameterDirection,System.Int32,PL.Base.DBParamType)">
            <summary>
            创建参数
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="pdType"></param>
            <param name="iSize"></param>
             <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.Execute(System.String,System.Object)">
            <summary>
            事务执行语句
            </summary>
            <param name="strSql"></param>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.ExecuteWithOption(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            事务执行语句
            </summary>
            <param name="strSql"></param>
            <param name="oDBTransaction"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.Execute(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.ExecuteWithOption(System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
             <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.ExecuteProcedure(System.String,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行数据库存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.GetDataReader(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.GetDataSet(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            获取DataSet
            </summary>
            <param name="SQL"></param>
            <param name="Alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.GetDataView(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataView
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.GetFieldValue(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取指定列值
            </summary>
            <param name="SQL"></param>
            <param name="FieldName"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OleDB.GetParameterValue(System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.OleDB.Connection">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.OleDB.ConnType">
            <summary>
            数据库连接类型
            </summary>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.OleDB.ErrMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.LogExecuteSql(System.String)">
            <summary>
            记录执行的SQL日志
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.Commit(System.Object)">
             <summary>
            提交事务
             </summary>
             <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.RollBack(System.Object)">
            <summary>
            回滚事务
            </summary>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.CreateParameter(System.String,System.Object,System.Data.ParameterDirection,System.Int32,PL.Base.DBParamType)">
            <summary>
            创建参数
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="pdType"></param>
            <param name="iSize"></param>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.Execute(System.String,System.Object)">
            <summary>
            事务执行语句
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.ExecuteWithOption(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            事务执行语句
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.Execute(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.ExecuteWithOption(System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.ExecuteProcedure(System.String,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行数据库存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.GetDataReader(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="sql"></param>
            <param name="isNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.GetDataSet(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            获取DataSet
            </summary>
            <param name="sql"></param>
            <param name="alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.GetDataView(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataView
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="UserTransaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.GetFieldValue(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取指定列值
            </summary>
            <param name="sql"></param>
            <param name="FieldName"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.OraDB.GetParameterValue(System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.OraDB.Connection">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:ECI.BaseFramework.DBConnection.OraDB.ConnType">
            <summary>
            数据库连接类型
            </summary>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.LogExecuteSql(System.String)">
            <summary>
            记录执行的SQL日志
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.Commit(System.Object)">
             <summary>
            提交事务
             </summary>
             <param name="oDBTransaction"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.CreateParameter(System.String,System.Object,System.Data.ParameterDirection,System.Int32,PL.Base.DBParamType)">
            <summary>
            创建参数
            </summary>
            <param name="strName"></param>
            <param name="strValue"></param>
            <param name="pdType"></param>
            <param name="iSize"></param>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.CreateTransaction">
            <summary>
            创建事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.ExecuteWithOption(System.String,System.Object,PL.Base.DBExecuteOption)">
            <summary>
            事务执行语句
            </summary>
            <param name="sql"></param>
            <param name="oDBTransaction"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.Execute(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.ExecuteWithOption(System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            数据库操作
            </summary>
            <param name="sql"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.ExecuteProcedure(System.String,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            执行数据库存储过程
            </summary>
            <param name="strProcedureName"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.ExecuteProcedure(System.String,System.Object,System.Object[])">
            <summary>
            
            </summary>
            <param name="strProcedureName"></param>
            <param name="ts"></param>
            <param name="oParameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.ExecuteProcedure(System.String,System.Object,System.Object[],PL.Base.DBExecuteOption)">
            <summary>
            
            </summary>
            <param name="strProcedureName"></param>
            <param name="ts"></param>
            <param name="oParameters"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.GetDataReader(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataReader
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.GetDataSet(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,PL.Base.DBExecuteOption,System.Object[])">
            <summary>
            获取DataSet
            </summary>
            <param name="sql"></param>
            <param name="Alias"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="options"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.GetDataView(System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取DataView
            </summary>
            <param name="SQL"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.GetFieldValue(System.String,System.String,System.Boolean,System.Object,System.Data.CommandType,System.Object[])">
            <summary>
            获取指定列值
            </summary>
            <param name="SQL"></param>
            <param name="FieldName"></param>
            <param name="IsNeedTransaction"></param>
            <param name="transaction"></param>
            <param name="commandType"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:ECI.BaseFramework.DBConnection.SQLDB.GetParameterValue(System.Object)">
            <summary>
            获取参数
            </summary>
            <param name="oParameter"></param>
            <returns></returns>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.LOGIN_NO">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.USER_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.TRUE_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.COMPANY_CODE">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.COMPANY_NAME">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.OPERATION_DATE">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.OPERATION_TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.SUCCESS">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.MESSAGE">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.TYPE">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.TOKEN">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.URL">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.URL_REF">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.SESSION_ID">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.IP">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.BROWSER">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.OS">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.MEMO">
            <summary>
             
            </summary>
        </member>
        <member name="P:ECI.Speed.Core.Entity.ECI_LOGIN_HISTORY.STACK_TRACE">
            <summary>
             
            </summary>
        </member>
    </members>
</doc>
